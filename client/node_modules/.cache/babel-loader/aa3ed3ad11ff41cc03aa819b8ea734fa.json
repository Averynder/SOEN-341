{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\src\\\\FinalizeExportSem.js\";\nimport React from \"react\";\nimport Button from \"./components/Button\";\nimport { Link } from \"react-router-dom\";\n\nvar FinalizeExportSem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FinalizeExportSem, _React$Component);\n\n  function FinalizeExportSem() {\n    _classCallCheck(this, FinalizeExportSem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FinalizeExportSem).apply(this, arguments));\n  }\n\n  _createClass(FinalizeExportSem, [{\n    key: \"render\",\n    // constructor(props, context) {\n    //   super(props, context);\n    //   this.setCourses = this.setCourses.bind(this);\n    //   this.regEx = this.regEx.bind(this);\n    //   this.regEx2 = this.regEx2.bind(this);\n    //   this.state = {\n    //     lectures: null,\n    //     labs: null,\n    //     tutorials: null,\n    //     dataCourses: null,\n    //     Courses: null,\n    //     coursesFall: null,\n    //     coursesWinter: null,\n    //     coursesSummer: null,\n    //     coursesTaken: null,\n    //     loggedIn: false,\n    //     printme: null,\n    //     weekdays: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\n    //   }\n    // }\n    // componentDidMount() {\n    //   fetch(\"/semQuery\")\n    //     .then(res => res.json())\n    //     .then(users2 => this.setState({ users2 }, () => this.setCourses(users2)))\n    //     .then(() => this.regEx())\n    //     .then(() => { document.getElementById('pasteMe7000').innerHTML = this.state.printme; })\n    // }\n    // setCourses(stringy) {\n    //   stringy = \"\" + stringy;\n    //   var lecStartPosition = stringy.indexOf('\"lectures\":[');\n    //   var tutStartPosition = stringy.indexOf('\"tutorials\":[');\n    //   this.state.lectures = stringy.substring(\n    //     lecStartPosition + 12,\n    //     tutStartPosition\n    //   );\n    //   var labStartPosition = stringy.indexOf('\"labs\":[');\n    //   this.state.tutorials = stringy.substring(\n    //     tutStartPosition + 13,\n    //     labStartPosition\n    //   );\n    //   var sequenceStartPos = stringy.indexOf('\"result2\":[');\n    //   this.state.labs = stringy.substring(labStartPosition + 8, sequenceStartPos);\n    //   var namePosition = stringy.indexOf('\"names\":[');\n    //   this.state.Courses = stringy.substring(sequenceStartPos + 11, namePosition);\n    //   var endingPosition = stringy.indexOf(\"]}]\");\n    //   this.state.coursesTaken = stringy.substring(\n    //     namePosition + 9,\n    //     endingPosition\n    //   );\n    //   if (this.state.coursesTaken != \"\") this.state.loggedIn = true;\n    // }\n    // regEx() {\n    //   var courses31 = [];\n    //   var totaldatabaseEntriesLec = 0;\n    //   var totaldatabaseEntriesTut = 0;\n    //   var totaldatabaseEntriesLab = 0;\n    //   // Gathering Info from Lectures\n    //   while (this.state.lectures.length > 1) {\n    //     var subjectStart = this.state.lectures.indexOf('\"subject\":\"');\n    //     this.state.lectures = this.state.lectures.substring(subjectStart + 11);\n    //     var endQuote1 = this.state.lectures.indexOf('\"');\n    //     var subject = this.state.lectures.substring(0, endQuote1);\n    //     var classnumbertStart = this.state.lectures.indexOf('\"classNumber\":\"');\n    //     this.state.lectures = this.state.lectures.substring(\n    //       classnumbertStart + 15\n    //     );\n    //     var endQuote2 = this.state.lectures.indexOf('\"');\n    //     var classNumber = this.state.lectures.substring(0, endQuote2);\n    //     subject = subject + classNumber;\n    //     var lectureSectionNumber = this.state.lectures.indexOf(\n    //       '\"lectureSectionNumber\":\"\\\\\"'\n    //     );\n    //     this.state.lectures = this.state.lectures.substring(\n    //       lectureSectionNumber + 26\n    //     );\n    //     var endQuote3 = this.state.lectures.indexOf('\"');\n    //     var sectionNumber = this.state.lectures.substring(0, endQuote3 - 1);\n    //     var locationNumber = this.state.lectures.indexOf('\"location\":\"\\\\\"');\n    //     this.state.lectures = this.state.lectures.substring(locationNumber + 14);\n    //     var endQuote4 = this.state.lectures.indexOf('\"');\n    //     var location = this.state.lectures.substring(0, endQuote4 - 1);\n    //     var daysWasOne = false;\n    //     var daysNumber = this.state.lectures.indexOf('\"days\":\"');\n    //     this.state.lectures = this.state.lectures.substring(daysNumber + 8);\n    //     var endQuote5 = this.state.lectures.indexOf('\"');\n    //     var days = this.state.lectures.substring(0, endQuote5);\n    //     if (days.match(/day/) != null) {\n    //       if (days.match(/day/g).length > 1) {\n    //         days =\n    //           days.substring(0, days.indexOf(\",\")) +\n    //           \",\" +\n    //           days.substring(days.indexOf(\",\") + 2, days.length - 2);\n    //         var index = days.indexOf(\",\");\n    //         var day1 = days.substring(0, index);\n    //         var day2 = days.substring(index + 1);\n    //         days = [day1, day2];\n    //       } else {\n    //         days =\n    //           '\"' +\n    //           days.substring(0, days.indexOf(\",\")) +\n    //           '\",' +\n    //           days.substring(days.indexOf(\",\") + 1, days.length - 2) +\n    //           '\"';\n    //         days = days.substring(0, days.length - 3);\n    //         days = days.substring(1, days.length - 1);\n    //         days = [days];\n    //         daysWasOne = true;\n    //       }\n    //     }\n    //     var startNumber = this.state.lectures.indexOf('\"startTime\":\"');\n    //     this.state.lectures = this.state.lectures.substring(startNumber + 13);\n    //     var endQuote6 = this.state.lectures.indexOf('\"');\n    //     var startTime = this.state.lectures.substring(0, endQuote6 - 3);\n    //     if (startTime.charAt(0) == \" \") startTime = startTime.substring(1);\n    //     startTime = parseFloat(startTime).toFixed(2);\n    //     var endNumber = this.state.lectures.indexOf('\"endTime\":\"');\n    //     this.state.lectures = this.state.lectures.substring(endNumber + 11);\n    //     var endQuote7 = this.state.lectures.indexOf('\"');\n    //     var endTime = this.state.lectures.substring(0, endQuote7 - 3);\n    //     endTime = parseFloat(endTime).toFixed(2);\n    //     if (daysWasOne) {\n    //       if (endTime - startTime < 2.0) {\n    //         days.push(\"Thursday\");\n    //       }\n    //     }\n    //     startTime =\n    //       \"\" +\n    //       startTime.substring(0, startTime.indexOf(\".\")) +\n    //       \":\" +\n    //       startTime.substring(startTime.indexOf(\".\") + 1);\n    //     endTime =\n    //       \"\" +\n    //       endTime.substring(0, endTime.indexOf(\".\")) +\n    //       \":\" +\n    //       endTime.substring(endTime.indexOf(\".\") + 1);\n    //     var semNumber = this.state.lectures.indexOf('\"semester\":\"');\n    //     this.state.lectures = this.state.lectures.substring(semNumber + 12);\n    //     var endQuote8 = this.state.lectures.indexOf('\"');\n    //     var semester = this.state.lectures.substring(0, endQuote8);\n    //     // Adding all the different Courses to an arraylist \"courses\"\n    //     var newCourse = new JsonClass(subject, semester);\n    //     var inThere = false;\n    //     var indexOfCourse = 0;\n    //     var i;\n    //     for (i = 0; i < courses31.length; i++) {\n    //       var boolean1 = courses31[i].equals2(newCourse);\n    //       if (boolean1 == true) {\n    //         inThere = true;\n    //         indexOfCourse = i;\n    //       }\n    //     }\n    //     if (!inThere) {\n    //       courses31.push(newCourse);\n    //       indexOfCourse = courses31.length - 1;\n    //     }\n    //     // Adding The Lecture to the Course\n    //     var lecture = new JsonLecture(\n    //       sectionNumber,\n    //       days,\n    //       startTime,\n    //       endTime,\n    //       location\n    //     );\n    //     courses31[indexOfCourse].addLecture(lecture);\n    //     //console.log(subject + \" \" + sectionNumber + \" \" + location + \" \" + days + \" \" + startTime + \" \" + endTime);\n    //     totaldatabaseEntriesLec++;\n    //   }\n    //   // Adding Tutorial Entries\n    //   while (this.state.tutorials.length > 1) {\n    //     var subjectStart = this.state.tutorials.indexOf('\"subject\":\"');\n    //     this.state.tutorials = this.state.tutorials.substring(subjectStart + 11);\n    //     var endQuote1 = this.state.tutorials.indexOf('\"');\n    //     var subject = this.state.tutorials.substring(0, endQuote1);\n    //     var classnumbertStart = this.state.tutorials.indexOf('\"classNumber\":\"');\n    //     this.state.tutorials = this.state.tutorials.substring(\n    //       classnumbertStart + 15\n    //     );\n    //     var endQuote2 = this.state.tutorials.indexOf('\"');\n    //     var classNumber = this.state.tutorials.substring(0, endQuote2);\n    //     subject = subject + classNumber;\n    //     var tutorialSectionNumber = this.state.tutorials.indexOf(\n    //       '\"tutorialSectionNumber\":\"\\\\\"'\n    //     );\n    //     this.state.tutorials = this.state.tutorials.substring(\n    //       tutorialSectionNumber + 27\n    //     );\n    //     var endQuote3 = this.state.tutorials.indexOf('\"');\n    //     var sectionNumber = this.state.tutorials.substring(0, endQuote3 - 1);\n    //     if (sectionNumber.indexOf(\" \") > -1) {\n    //       sectionNumber =\n    //         sectionNumber.substring(0, sectionNumber.indexOf(\" \")) +\n    //         sectionNumber.substring(sectionNumber.indexOf(\" \") + 1);\n    //     }\n    //     var locationNumber = this.state.tutorials.indexOf('\"location\":\"\\\\\"');\n    //     this.state.tutorials = this.state.tutorials.substring(\n    //       locationNumber + 14\n    //     );\n    //     var endQuote4 = this.state.tutorials.indexOf('\"');\n    //     var location = this.state.tutorials.substring(0, endQuote4 - 1);\n    //     var daysNumber = this.state.tutorials.indexOf('\"days\":\"');\n    //     this.state.tutorials = this.state.tutorials.substring(daysNumber + 8);\n    //     var endQuote5 = this.state.tutorials.indexOf('\"');\n    //     var days = this.state.tutorials.substring(0, endQuote5);\n    //     if (days.match(/day/) != null) {\n    //       if (days.match(/day/g).length == 1) {\n    //         days =\n    //           '\"' +\n    //           days.substring(0, days.indexOf(\",\")) +\n    //           '\",' +\n    //           days.substring(days.indexOf(\",\") + 1, days.length - 2) +\n    //           '\"';\n    //         days = days.substring(0, days.length - 3);\n    //         days = days.substring(1, days.length - 1);\n    //         days = [days];\n    //       }\n    //     }\n    //     var startNumber = this.state.tutorials.indexOf('\"startTime\":\"');\n    //     this.state.tutorials = this.state.tutorials.substring(startNumber + 13);\n    //     var endQuote6 = this.state.tutorials.indexOf('\"');\n    //     var startTime = this.state.tutorials.substring(0, endQuote6 - 3);\n    //     if (startTime.charAt(0) == \" \") startTime = startTime.substring(1);\n    //     startTime = parseFloat(startTime).toFixed(2);\n    //     var endNumber = this.state.tutorials.indexOf('\"endTime\":\"');\n    //     this.state.tutorials = this.state.tutorials.substring(endNumber + 11);\n    //     var endQuote7 = this.state.tutorials.indexOf('\"');\n    //     var endTime = this.state.tutorials.substring(0, endQuote7 - 3);\n    //     endTime = parseFloat(endTime).toFixed(2);\n    //     startTime =\n    //       \"\" +\n    //       startTime.substring(0, startTime.indexOf(\".\")) +\n    //       \":\" +\n    //       startTime.substring(startTime.indexOf(\".\") + 1);\n    //     endTime =\n    //       \"\" +\n    //       endTime.substring(0, endTime.indexOf(\".\")) +\n    //       \":\" +\n    //       endTime.substring(endTime.indexOf(\".\") + 1);\n    //     var semNumber = this.state.tutorials.indexOf('\"semester\":\"');\n    //     this.state.tutorials = this.state.tutorials.substring(semNumber + 12);\n    //     var endQuote8 = this.state.tutorials.indexOf('\"');\n    //     var semester = this.state.tutorials.substring(0, endQuote8);\n    //     if (days.length == 0) days = [\"Thursday\"];\n    //     else if (days[0] == \"\" || days[0] == \" \" || days[0] == null)\n    //       days = [\"Thursday\"];\n    //     var newCourse = new JsonClass(subject, semester);\n    //     var foundCourse = false;\n    //     var indexOfCourse = 0;\n    //     var i;\n    //     for (i = 0; i < courses31.length; i++) {\n    //       var boolean1 = courses31[i].equals2(newCourse);\n    //       if (boolean1 == true) {\n    //         foundCourse = true;\n    //         indexOfCourse = i;\n    //       }\n    //     }\n    //     if (!foundCourse) {\n    //       courses31.push(newCourse);\n    //       indexOfCourse = courses31.length - 1;\n    //     }\n    //     // Adding The Tutorial to the Lecture in the Course --> Find Right Lecture --> Add Tut\n    //     var lectureExists = false;\n    //     var tut = new JsonTut(sectionNumber, days, startTime, endTime, location);\n    //     var correctCourse = courses31[indexOfCourse];\n    //     var lectureSection = sectionNumber.substring(0, sectionNumber.length - 2);\n    //     for (i = 0; i < correctCourse.lecture.length; i++) {\n    //       if (correctCourse.lecture[i].section == lectureSection) {\n    //         lectureExists = true;\n    //         correctCourse.lecture[i].addTut(tut);\n    //       }\n    //     }\n    //     if (!lectureExists) {\n    //       var noLec = new JsonLecture();\n    //       noLec.addTut(tut);\n    //       correctCourse.addLecture(noLec);\n    //     }\n    //     //console.log(subject + \" \" + sectionNumber + \" \" + location + \" \" + days + \" \" + startTime + \" \" + endTime);\n    //     totaldatabaseEntriesTut++;\n    //     //console.log(subject + \" \" + sectionNumber + \" \" + location + \" \" + days + \" \" + startTime + \" \" + endTime);\n    //   }\n    //   // Gathering Info from Labs\n    //   while (this.state.labs.length > 1) {\n    //     var subjectStart = this.state.labs.indexOf('\"subject\":\"');\n    //     this.state.labs = this.state.labs.substring(subjectStart + 11);\n    //     var endQuote1 = this.state.labs.indexOf('\"');\n    //     var subject = this.state.labs.substring(0, endQuote1);\n    //     var classnumbertStart = this.state.labs.indexOf('\"classNumber\":\"');\n    //     this.state.labs = this.state.labs.substring(classnumbertStart + 15);\n    //     var endQuote2 = this.state.labs.indexOf('\"');\n    //     var classNumber = this.state.labs.substring(0, endQuote2);\n    //     subject = subject + classNumber;\n    //     var labSectionNumber = this.state.labs.indexOf('\"labSectionNumber\":\"\\\\\"');\n    //     this.state.labs = this.state.labs.substring(labSectionNumber + 22);\n    //     var endQuote3 = this.state.labs.indexOf('\"');\n    //     var sectionNumber = this.state.labs.substring(0, endQuote3 - 1);\n    //     var locationNumber = this.state.labs.indexOf('\"location\":\"\\\\\"');\n    //     this.state.labs = this.state.labs.substring(locationNumber + 14);\n    //     var endQuote4 = this.state.labs.indexOf('\"');\n    //     var location = this.state.labs.substring(0, endQuote4 - 1);\n    //     var daysWasOne = false;\n    //     var daysNumber = this.state.labs.indexOf('\"days\":\"');\n    //     this.state.labs = this.state.labs.substring(daysNumber + 8);\n    //     var endQuote5 = this.state.labs.indexOf('\"');\n    //     var days = this.state.labs.substring(0, endQuote5);\n    //     if (days.match(/day/) != null) {\n    //       if (days.match(/day/g).length > 1) {\n    //         days =\n    //           days.substring(0, days.indexOf(\",\")) +\n    //           \",\" +\n    //           days.substring(days.indexOf(\",\") + 2, days.length - 2);\n    //         var index = days.indexOf(\",\");\n    //         var day1 = days.substring(0, index);\n    //         var day2 = days.substring(index + 1);\n    //         days = [day1, day2];\n    //       } else {\n    //         days =\n    //           '\"' +\n    //           days.substring(0, days.indexOf(\",\")) +\n    //           '\",' +\n    //           days.substring(days.indexOf(\",\") + 1, days.length - 2) +\n    //           '\"';\n    //         days = days.substring(0, days.length - 3);\n    //         days = days.substring(1, days.length - 1);\n    //         days = [days];\n    //         daysWasOne = true;\n    //       }\n    //     }\n    //     var startNumber = this.state.labs.indexOf('\"startTime\":\"');\n    //     this.state.labs = this.state.labs.substring(startNumber + 13);\n    //     var endQuote6 = this.state.labs.indexOf('\"');\n    //     var startTime = this.state.labs.substring(0, endQuote6 - 3);\n    //     if (startTime.charAt(0) == \" \") startTime = startTime.substring(1);\n    //     startTime = parseFloat(startTime).toFixed(2);\n    //     var endNumber = this.state.labs.indexOf('\"endTime\":\"');\n    //     this.state.labs = this.state.labs.substring(endNumber + 11);\n    //     var endQuote7 = this.state.labs.indexOf('\"');\n    //     var endTime = this.state.labs.substring(0, endQuote7 - 3);\n    //     endTime = parseFloat(endTime).toFixed(2);\n    //     if (days.length == 0) days = [\"Thursday\"];\n    //     else if (days[0] == \"\" || days[0] == \" \" || days[0] == null)\n    //       days = [\"Thursday\"];\n    //     startTime =\n    //       \"\" +\n    //       startTime.substring(0, startTime.indexOf(\".\")) +\n    //       \":\" +\n    //       startTime.substring(startTime.indexOf(\".\") + 1);\n    //     endTime =\n    //       \"\" +\n    //       endTime.substring(0, endTime.indexOf(\".\")) +\n    //       \":\" +\n    //       endTime.substring(endTime.indexOf(\".\") + 1);\n    //     var semNumber = this.state.labs.indexOf('\"semester\":\"');\n    //     this.state.labs = this.state.labs.substring(semNumber + 12);\n    //     var endQuote8 = this.state.labs.indexOf('\"');\n    //     var semester = this.state.labs.substring(0, endQuote8);\n    //     // Adding all the different Courses to an arraylist \"courses\"\n    //     var newCourse = new JsonClass(subject, semester);\n    //     var indexOfCourse = 0;\n    //     var i;\n    //     for (i = 0; i < courses31.length; i++) {\n    //       var boolean1 = courses31[i].equals2(newCourse);\n    //       if (boolean1 == true) {\n    //         indexOfCourse = i;\n    //       }\n    //     }\n    //     // Adding The Lecture to the Course\n    //     var labby = new JsonLecture(\n    //       sectionNumber,\n    //       days,\n    //       startTime,\n    //       endTime,\n    //       location\n    //     );\n    //     courses31[indexOfCourse].addLab(labby);\n    //     //console.log(subject + \" \" + sectionNumber + \" \" + location + \" \" + days + \" \" + startTime + \" \" + endTime);\n    //     totaldatabaseEntriesLab++;\n    //   }\n    //   // Displaying Results\n    //   courses31.pop();\n    //   console.log(\n    //     \"Got #\" + totaldatabaseEntriesLec + \" Lecture entries from database\"\n    //   );\n    //   console.log(\n    //     \"Got #\" + totaldatabaseEntriesTut + \" Tutorial entries from database\"\n    //   );\n    //   console.log(\n    //     \"Got #\" + totaldatabaseEntriesLab + \" Lab entries from database\"\n    //   );\n    //   this.state.dataCourses = courses31;\n    //   this.regEx2();\n    //   console.log(this.state.dataCourses);\n    //   // Removing Courses Already taken from set\n    //   if (this.state.loggedIn) {\n    //     var jjj;\n    //     while (this.state.coursesTaken.length > 1) {\n    //       var startingQuote = this.state.coursesTaken.indexOf('\"');\n    //       this.state.coursesTaken = this.state.coursesTaken.substring(\n    //         startingQuote + 1\n    //       );\n    //       var endingQuote = this.state.coursesTaken.indexOf('\"');\n    //       var course = this.state.coursesTaken.substring(0, endingQuote);\n    //       course =\n    //         course.substring(0, course.indexOf(\" \")) +\n    //         course.substring(course.indexOf(\" \") + 1);\n    //       this.state.coursesTaken = this.state.coursesTaken.substring(9);\n    //       for (jjj = 0; jjj < this.state.dataCourses.length; jjj++) {\n    //         if (this.state.dataCourses[jjj].course == course) {\n    //           this.state.dataCourses.splice(jjj, 1);\n    //         }\n    //       }\n    //     }\n    //   }\n    //   // Removing Undefined Lectures from set\n    //   var jarjar, jarjab;\n    //   for (jarjar = 0; jarjar < this.state.dataCourses.length; jarjar++) {\n    //     for (\n    //       jarjab = 0;\n    //       jarjab < this.state.dataCourses[jarjar].lecture.length;\n    //       jarjab++\n    //     ) {\n    //       if (this.state.dataCourses[jarjar].lecture[jarjab] != null) {\n    //         if (\n    //           this.state.dataCourses[jarjar].lecture[jarjab].section == undefined\n    //         ) {\n    //           this.state.dataCourses[jarjar].lecture.splice(jarjab, 1);\n    //           jarjab = -1;\n    //         }\n    //       }\n    //     }\n    //   }\n    //   // Placing Courses into Semesters\n    //   var coursesFall = [];\n    //   var coursesWinter = [];\n    //   var coursesSummer = [];\n    //   for (i = 0; i < courses31.length; i++) {\n    //     if (courses31[i].semester == \"Fall\") {\n    //       coursesFall.push(courses31[i]);\n    //     } else if (courses31[i].semester == \"Winter\") {\n    //       coursesWinter.push(courses31[i]);\n    //     } else {\n    //       coursesSummer.push(courses31[i]);\n    //     }\n    //   }\n    //   var j, k, a, b;\n    //   for (i = 0; i < courses31.length; i++) {\n    //     // lecture removing duplicates\n    //     if (courses31[i].lecture != null) {\n    //       for (j = 0; j < courses31[i].lecture.length; j++) {\n    //         for (k = 0; k < courses31[i].lecture.length; k++) {\n    //           if (courses31[i].lecture[j] != null) {\n    //             if (\n    //               courses31[i].lecture[j].section ==\n    //               courses31[i].lecture[k].section &&\n    //               courses31[i].lecture[j].startTime ==\n    //               courses31[i].lecture[k].startTime &&\n    //               courses31[i].lecture[j].endTime ==\n    //               courses31[i].lecture[k].endTime &&\n    //               courses31[i].lecture[j].room != courses31[i].lecture[k].room &&\n    //               j != k\n    //             ) {\n    //               courses31[i].lecture[j].room +=\n    //                 \" or \" + courses31[i].lecture[k].room;\n    //               courses31[i].lecture.splice(k, 1);\n    //             }\n    //           }\n    //         }\n    //         if (courses31[i].lecture[j] != null) {\n    //           if (courses31[i].lecture[j].tutorial != null) {\n    //             for (b = 0; b < courses31[i].lecture[j].tutorial.length; b++) {\n    //               for (a = 0; a < courses31[i].lecture[j].tutorial.length; a++) {\n    //                 if (courses31[i].lecture[j].tutorial[b] != null) {\n    //                   if (\n    //                     courses31[i].lecture[j].tutorial[b].section ==\n    //                     courses31[i].lecture[j].tutorial[a].section &&\n    //                     courses31[i].lecture[j].tutorial[b].startTime ==\n    //                     courses31[i].lecture[j].tutorial[a].startTime &&\n    //                     courses31[i].lecture[j].tutorial[b].endTime ==\n    //                     courses31[i].lecture[j].tutorial[a].endTime &&\n    //                     courses31[i].lecture[j].tutorial[b].room !=\n    //                     courses31[i].lecture[j].tutorial[a].room &&\n    //                     a != b\n    //                   ) {\n    //                     courses31[i].lecture[j].tutorial[b].room +=\n    //                       \" or \" + courses31[i].lecture[j].tutorial[a].room;\n    //                     courses31[i].lecture[j].tutorial.splice(a, 1);\n    //                     a = -1;\n    //                   }\n    //                 }\n    //               }\n    //             }\n    //           }\n    //         }\n    //       }\n    //     }\n    //     // lab removing duplicates\n    //     if (courses31[i].lab != null) {\n    //       for (a = 0; a < courses31[i].lab.length; a++) {\n    //         for (k = 0; k < courses31[i].lab.length; k++) {\n    //           if (\n    //             courses31[i].lab[a].section == courses31[i].lab[k].section &&\n    //             courses31[i].lab[a].startTime == courses31[i].lab[k].startTime &&\n    //             courses31[i].lab[a].endTime == courses31[i].lab[k].endTime &&\n    //             courses31[i].lab[a].room != courses31[i].lab[k].room &&\n    //             a != k\n    //           ) {\n    //             courses31[i].lab[a].room += \" or \" + courses31[i].lab[k].room;\n    //             courses31[i].lab.splice(k, 1);\n    //           }\n    //         }\n    //       }\n    //     }\n    //   }\n    //   this.state.coursesFall = coursesFall;\n    //   this.state.coursesWinter = coursesWinter;\n    //   this.state.coursesSummer = coursesSummer;\n    //   let printable = \"\";\n    //   for (let kpop = 0; kpop < this.state.coursesFall.length; kpop++) {\n    //     printable += this.state.coursesFall[kpop].course + \" \" + this.state.coursesFall[kpop].semester + \"<br/>\";\n    //   }\n    //   for (let kpop = 0; kpop < this.state.coursesWinter.length; kpop++) {\n    //     printable += this.state.coursesWinter[kpop].course + \" \" + this.state.coursesWinter[kpop].semester + \"<br/>\";\n    //   }\n    //   for (let kpop = 0; kpop < this.state.coursesSummer.length; kpop++) {\n    //     printable += this.state.coursesSummer[kpop].course + \" \" + this.state.coursesSummer[kpop].semester + \"<br/>\";\n    //   }\n    //   this.state.printme = printable;\n    //   //this.state.courses2 = courses31; //CHANGE TO GET PROPER COURSES\n    // }\n    // regEx2() {\n    //   //console.log(this.state.dataCourses);\n    //   //console.log(data1.sequence);\n    //   while (this.state.Courses.length > 1) {\n    //     var titleStart = this.state.Courses.indexOf('\"courseTitle\":\"');\n    //     this.state.Courses = this.state.Courses.substring(titleStart + 15);\n    //     var endQuote1 = this.state.Courses.indexOf('\"');\n    //     var title = this.state.Courses.substring(0, endQuote1);\n    //     var subjectStart = this.state.Courses.indexOf('\"subject\":\"');\n    //     this.state.Courses = this.state.Courses.substring(subjectStart + 11);\n    //     var endQuote2 = this.state.Courses.indexOf('\"');\n    //     var subject = this.state.Courses.substring(0, endQuote2);\n    //     var numberStart = this.state.Courses.indexOf('\"classNumber\":\"');\n    //     this.state.Courses = this.state.Courses.substring(numberStart + 15);\n    //     var endQuote3 = this.state.Courses.indexOf('\"');\n    //     var courseNumber = this.state.Courses.substring(0, endQuote3);\n    //     var creditsStart = this.state.Courses.indexOf('\"credits\":\"');\n    //     this.state.Courses = this.state.Courses.substring(creditsStart + 11);\n    //     var endQuote4 = this.state.Courses.indexOf('\"');\n    //     var creditNumber = this.state.Courses.substring(0, endQuote4);\n    //     var prereqStart = this.state.Courses.search('\"prerequisites\":\"');\n    //     this.state.Courses = this.state.Courses.substring(prereqStart + 17);\n    //     var endQuote5 = this.state.Courses.search('\"');\n    //     var prereqs = this.state.Courses.substring(0, endQuote5);\n    //     var potentialSPace = prereqs.charAt(0);\n    //     if (potentialSPace == \" \") prereqs = prereqs.substring(1);\n    //     while (prereqs.indexOf(\"<==>\") > -1) {\n    //       var weirdshi = prereqs.indexOf(\"<==>\");\n    //       prereqs =\n    //         prereqs.substring(0, weirdshi) +\n    //         \" or \" +\n    //         prereqs.substring(weirdshi + 4);\n    //     }\n    //     while (prereqs.search(/\\d COMP/) > -1) {\n    //       var starter = prereqs.search(/\\d COMP/);\n    //       prereqs =\n    //         prereqs.substring(0, starter + 1) +\n    //         \" and COMP\" +\n    //         prereqs.substring(starter + 6);\n    //     }\n    //     while (prereqs.search(/\\d SOEN/) > -1) {\n    //       var starter = prereqs.search(/\\d SOEN/);\n    //       prereqs =\n    //         prereqs.substring(0, starter + 1) +\n    //         \" and SOEN\" +\n    //         prereqs.substring(starter + 6);\n    //     }\n    //     while (prereqs.search(/\\d MATH/) > -1) {\n    //       var starter = prereqs.search(/\\d MATH/);\n    //       prereqs =\n    //         prereqs.substring(0, starter + 1) +\n    //         \" and MATH\" +\n    //         prereqs.substring(starter + 6);\n    //     }\n    //     while (prereqs.search(/\\d ENGR/) > -1) {\n    //       var starter = prereqs.search(/\\d ENGR/);\n    //       prereqs =\n    //         prereqs.substring(0, starter + 1) +\n    //         \" and ENGR\" +\n    //         prereqs.substring(starter + 6);\n    //     }\n    //     while (prereqs.search(/\\d ENCS/) > -1) {\n    //       var starter = prereqs.search(/\\d ENCS/);\n    //       prereqs =\n    //         prereqs.substring(0, starter + 1) +\n    //         \" and ENCS\" +\n    //         prereqs.substring(starter + 6);\n    //     }\n    //     var coreqStart = this.state.Courses.search('\"corequisites\":\"');\n    //     this.state.Courses = this.state.Courses.substring(coreqStart + 16);\n    //     var endQuote6 = this.state.Courses.search('\"');\n    //     var coreqs = this.state.Courses.substring(0, endQuote6);\n    //     var potentialSPace2 = coreqs.charAt(0);\n    //     if (potentialSPace2 == \" \") coreqs = coreqs.substring(1);\n    //     while (coreqs.indexOf(\"<==>\") > -1) {\n    //       var weirdshi = coreqs.indexOf(\"<==>\");\n    //       coreqs =\n    //         coreqs.substring(0, weirdshi) +\n    //         \" or \" +\n    //         coreqs.substring(weirdshi + 4);\n    //     }\n    //     while (coreqs.search(/\\d COMP/) > -1) {\n    //       var starter = coreqs.search(/\\d COMP/);\n    //       coreqs =\n    //         coreqs.substring(0, starter + 1) +\n    //         \" and COMP\" +\n    //         coreqs.substring(starter + 6);\n    //     }\n    //     while (coreqs.search(/\\d SOEN/) > -1) {\n    //       var starter = coreqs.search(/\\d SOEN/);\n    //       coreqs =\n    //         coreqs.substring(0, starter + 1) +\n    //         \" and SOEN\" +\n    //         coreqs.substring(starter + 6);\n    //     }\n    //     while (coreqs.search(/\\d MATH/) > -1) {\n    //       var starter = coreqs.search(/\\d MATH/);\n    //       coreqs =\n    //         coreqs.substring(0, starter + 1) +\n    //         \" and MATH\" +\n    //         coreqs.substring(starter + 6);\n    //     }\n    //     while (prereqs.search(/\\d ENGR/) > -1) {\n    //       var starter = coreqs.search(/\\d ENGR/);\n    //       coreqs =\n    //         coreqs.substring(0, starter + 1) +\n    //         \" and ENGR\" +\n    //         coreqs.substring(starter + 6);\n    //     }\n    //     while (coreqs.search(/\\d ENCS/) > -1) {\n    //       var starter = coreqs.search(/\\d ENCS/);\n    //       coreqs =\n    //         coreqs.substring(0, starter + 1) +\n    //         \" and ENCS\" +\n    //         coreqs.substring(starter + 6);\n    //     }\n    //     if (prereqs.indexOf(\",\") > -1) prereqs = \"\";\n    //     if (title != \"\") {\n    //       subject = subject + courseNumber;\n    //       //var cc = new Course(title, subject, courseNumber, creditNumber, prereqs, coreqs);\n    //       var i;\n    //       for (i = 0; i < this.state.dataCourses.length; i++) {\n    //         if (this.state.dataCourses[i].course == subject) {\n    //           this.state.dataCourses[i].name = title;\n    //           this.state.dataCourses[i].credit = parseFloat(creditNumber);\n    //           if (prereqs != \"\") {\n    //             if (prereqs.charAt(prereqs.length - 1) == \" \") {\n    //               prereqs = prereqs.substring(0, prereqs.length - 1);\n    //             }\n    //             if (prereqs.search(/[A-Z][A-Z][A-Z][A-Z]\\s[0-9][0-9][0-9]/) > -1) {\n    //               prereqs = prereqs.substring(0, prereqs.search(/[A-Z][A-Z][A-Z][A-Z]\\s[0-9][0-9][0-9]/) + 4) + prereqs.substring(prereqs.search(/[A-Z][A-Z][A-Z][A-Z]\\s[0-9][0-9][0-9]/) + 5);\n    //             }\n    //             this.state.dataCourses[i].prerequisites.push(prereqs);\n    //           }\n    //           if (coreqs != \"\") {\n    //             if (coreqs.charAt(coreqs.length - 1) == \" \") {\n    //               coreqs = coreqs.substring(0, coreqs.length - 1);\n    //             }\n    //             if (coreqs.search(/[A-Z][A-Z][A-Z][A-Z]\\s[0-9][0-9][0-9]/) > -1) {\n    //               coreqs = coreqs.substring(0, coreqs.search(/[A-Z][A-Z][A-Z][A-Z]\\s[0-9][0-9][0-9]/) + 4) + coreqs.substring(coreqs.search(/[A-Z][A-Z][A-Z][A-Z]\\s[0-9][0-9][0-9]/) + 5);\n    //             }\n    //             this.state.dataCourses[i].corequisites.push(coreqs);\n    //           }\n    //         }\n    //       }\n    //       //console.log(title + \" \" + subject + \" \" + creditNumber + \" Pre: \" + prereqs + \" Co: \" + coreqs);\n    //     }\n    //   }\n    // }\n    value: function render() {\n      var selectedCourses = this.props.location.selectedCourses;\n      console.log(selectedCourses);\n      var displayInfo = selectedCourses === undefined || selectedCourses.length === 0 ? React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733\n        },\n        __self: this\n      }, \"No Class Chosen Yet\") : selectedCourses.map(function (element) {\n        return React.createElement(\"tr\", {\n          style: {\n            margin: \"auto\",\n            backgroundColor: element.course_color\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 736\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            padding: \"20px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 742\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 743\n          },\n          __self: this\n        }, element.course_number), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 744\n          },\n          __self: this\n        }, element.course_name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 745\n          },\n          __self: this\n        }, element.course_semester), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 746\n          },\n          __self: this\n        }, element.course_year)), React.createElement(\"td\", {\n          style: {\n            padding: \"20px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 748\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 749\n          },\n          __self: this\n        }, \"LEC\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 750\n          },\n          __self: this\n        }, \"Section: \", element.lecture_section), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 751\n          },\n          __self: this\n        }, \"Room: \", element.lecture_room), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 752\n          },\n          __self: this\n        }, \"Days: \", element.lecture_days), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 753\n          },\n          __self: this\n        }, \"Start Time: \", element.lecture_start), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 754\n          },\n          __self: this\n        }, \"End Time: \", element.lecture_end)), element.tutorial_section !== \"\" ? React.createElement(\"td\", {\n          style: {\n            padding: \"20px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 758\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 759\n          },\n          __self: this\n        }, \"TUT\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 760\n          },\n          __self: this\n        }, \"Section: \", element.tutorial_section), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 761\n          },\n          __self: this\n        }, \"Room: \", element.tutorial_room), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 762\n          },\n          __self: this\n        }, \"Days: \", element.tutorial_days), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 763\n          },\n          __self: this\n        }, \"Start Time: \", element.tutorial_start), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 764\n          },\n          __self: this\n        }, \"End Time: \", element.tutorial_end)) : React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 767\n          },\n          __self: this\n        }), element.lab_section !== \"\" ? React.createElement(\"td\", {\n          style: {\n            padding: \"20px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 770\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 771\n          },\n          __self: this\n        }, \"LAB\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 772\n          },\n          __self: this\n        }, \"Section: \", element.lab_section), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 773\n          },\n          __self: this\n        }, \"Room: \", element.lab_room), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 774\n          },\n          __self: this\n        }, \"Days: \", element.lab_days), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 775\n          },\n          __self: this\n        }, \"Start Time: \", element.lab_start), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 776\n          },\n          __self: this\n        }, \"End Time: \", element.lab_end)) : React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 779\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"jumbotron j-greetings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789\n        },\n        __self: this\n      }, \"This is your Finalized Format\"), React.createElement(\"hr\", {\n        color: \"#7E1530\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        style: {\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792\n        },\n        __self: this\n      }, displayInfo)), React.createElement(Link, {\n        to: \"/select-semester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        },\n        __self: this\n      }, React.createElement(Button, {\n        text: \"Export as PDF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      })), React.createElement(Link, {\n        to: \"/course-selection-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      }, React.createElement(Button, {\n        text: \"Back to Course Selection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return FinalizeExportSem;\n}(React.Component);\n\nexport default FinalizeExportSem;","map":{"version":3,"sources":["C:\\Users\\MonPC\\Desktop\\School\\SOEN\\SOEN 341 Software Process'\\Project\\cssd\\client\\src\\FinalizeExportSem.js"],"names":["React","Button","Link","FinalizeExportSem","selectedCourses","props","location","console","log","displayInfo","undefined","length","map","element","margin","backgroundColor","course_color","padding","course_number","course_name","course_semester","course_year","lecture_section","lecture_room","lecture_days","lecture_start","lecture_end","tutorial_section","tutorial_room","tutorial_days","tutorial_start","tutorial_end","lab_section","lab_room","lab_days","lab_start","lab_end","marginLeft","marginRight","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,ieADD,GACqB,KAAKC,KAAL,CAAWC,QADhC,CACCF,eADD;AAEPG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ;AAEA,UAAIK,WAAW,GACbL,eAAe,KAAKM,SAApB,IAAiCN,eAAe,CAACO,MAAhB,KAA2B,CAA5D,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,GAGEP,eAAe,CAACQ,GAAhB,CAAoB,UAAAC,OAAO;AAAA,eACzB;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,MAAM,EAAE,MADH;AAELC,YAAAA,eAAe,EAAEF,OAAO,CAACG;AAFpB,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,OAAO,CAACK,aAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIL,OAAO,CAACM,WAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIN,OAAO,CAACO,eAAZ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIP,OAAO,CAACQ,WAAZ,CAJF,CANF,EAYE;AAAI,UAAA,KAAK,EAAE;AAAEJ,YAAAA,OAAO,EAAE;AAAX,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAaJ,OAAO,CAACS,eAArB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUT,OAAO,CAACU,YAAlB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUV,OAAO,CAACW,YAAlB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAgBX,OAAO,CAACY,aAAxB,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAcZ,OAAO,CAACa,WAAtB,CANF,CAZF,EAqBGb,OAAO,CAACc,gBAAR,KAA6B,EAA7B,GACC;AAAI,UAAA,KAAK,EAAE;AAAEV,YAAAA,OAAO,EAAE;AAAX,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAaJ,OAAO,CAACc,gBAArB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUd,OAAO,CAACe,aAAlB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUf,OAAO,CAACgB,aAAlB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAgBhB,OAAO,CAACiB,cAAxB,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAcjB,OAAO,CAACkB,YAAtB,CANF,CADD,GAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA/BJ,EAiCGlB,OAAO,CAACmB,WAAR,KAAwB,EAAxB,GACC;AAAI,UAAA,KAAK,EAAE;AAAEf,YAAAA,OAAO,EAAE;AAAX,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAaJ,OAAO,CAACmB,WAArB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUnB,OAAO,CAACoB,QAAlB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUpB,OAAO,CAACqB,QAAlB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAgBrB,OAAO,CAACsB,SAAxB,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAActB,OAAO,CAACuB,OAAtB,CANF,CADD,GAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA3CJ,CADyB;AAAA,OAA3B,CAJJ;AAsDA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE;AAAI,QAAA,KAAK,EAAC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,MAAd;AAAsBC,UAAAA,WAAW,EAAE;AAAnC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG7B,WADH,CADF,CAHF,EAWE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAXF,EAcE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,wBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAdF,CADF,CADF,CADF;AAwBD;;;;EApyB6BT,KAAK,CAACuC,S;;AAuyBtC,eAAepC,iBAAf","sourcesContent":["import React from \"react\";\r\nimport Button from \"./components/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass FinalizeExportSem extends React.Component {\r\n  // constructor(props, context) {\r\n  //   super(props, context);\r\n\r\n  //   this.setCourses = this.setCourses.bind(this);\r\n  //   this.regEx = this.regEx.bind(this);\r\n  //   this.regEx2 = this.regEx2.bind(this);\r\n\r\n  //   this.state = {\r\n  //     lectures: null,\r\n  //     labs: null,\r\n  //     tutorials: null,\r\n  //     dataCourses: null,\r\n  //     Courses: null,\r\n  //     coursesFall: null,\r\n  //     coursesWinter: null,\r\n  //     coursesSummer: null,\r\n  //     coursesTaken: null,\r\n  //     loggedIn: false,\r\n  //     printme: null,\r\n  //     weekdays: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\r\n  //   }\r\n  // }\r\n\r\n  // componentDidMount() {\r\n  //   fetch(\"/semQuery\")\r\n  //     .then(res => res.json())\r\n  //     .then(users2 => this.setState({ users2 }, () => this.setCourses(users2)))\r\n  //     .then(() => this.regEx())\r\n  //     .then(() => { document.getElementById('pasteMe7000').innerHTML = this.state.printme; })\r\n  // }\r\n\r\n  // setCourses(stringy) {\r\n  //   stringy = \"\" + stringy;\r\n  //   var lecStartPosition = stringy.indexOf('\"lectures\":[');\r\n  //   var tutStartPosition = stringy.indexOf('\"tutorials\":[');\r\n  //   this.state.lectures = stringy.substring(\r\n  //     lecStartPosition + 12,\r\n  //     tutStartPosition\r\n  //   );\r\n  //   var labStartPosition = stringy.indexOf('\"labs\":[');\r\n  //   this.state.tutorials = stringy.substring(\r\n  //     tutStartPosition + 13,\r\n  //     labStartPosition\r\n  //   );\r\n  //   var sequenceStartPos = stringy.indexOf('\"result2\":[');\r\n  //   this.state.labs = stringy.substring(labStartPosition + 8, sequenceStartPos);\r\n  //   var namePosition = stringy.indexOf('\"names\":[');\r\n  //   this.state.Courses = stringy.substring(sequenceStartPos + 11, namePosition);\r\n  //   var endingPosition = stringy.indexOf(\"]}]\");\r\n  //   this.state.coursesTaken = stringy.substring(\r\n  //     namePosition + 9,\r\n  //     endingPosition\r\n  //   );\r\n  //   if (this.state.coursesTaken != \"\") this.state.loggedIn = true;\r\n  // }\r\n\r\n  // regEx() {\r\n  //   var courses31 = [];\r\n  //   var totaldatabaseEntriesLec = 0;\r\n  //   var totaldatabaseEntriesTut = 0;\r\n  //   var totaldatabaseEntriesLab = 0;\r\n\r\n  //   // Gathering Info from Lectures\r\n  //   while (this.state.lectures.length > 1) {\r\n  //     var subjectStart = this.state.lectures.indexOf('\"subject\":\"');\r\n  //     this.state.lectures = this.state.lectures.substring(subjectStart + 11);\r\n  //     var endQuote1 = this.state.lectures.indexOf('\"');\r\n  //     var subject = this.state.lectures.substring(0, endQuote1);\r\n\r\n  //     var classnumbertStart = this.state.lectures.indexOf('\"classNumber\":\"');\r\n  //     this.state.lectures = this.state.lectures.substring(\r\n  //       classnumbertStart + 15\r\n  //     );\r\n  //     var endQuote2 = this.state.lectures.indexOf('\"');\r\n  //     var classNumber = this.state.lectures.substring(0, endQuote2);\r\n  //     subject = subject + classNumber;\r\n\r\n  //     var lectureSectionNumber = this.state.lectures.indexOf(\r\n  //       '\"lectureSectionNumber\":\"\\\\\"'\r\n  //     );\r\n  //     this.state.lectures = this.state.lectures.substring(\r\n  //       lectureSectionNumber + 26\r\n  //     );\r\n  //     var endQuote3 = this.state.lectures.indexOf('\"');\r\n  //     var sectionNumber = this.state.lectures.substring(0, endQuote3 - 1);\r\n\r\n  //     var locationNumber = this.state.lectures.indexOf('\"location\":\"\\\\\"');\r\n  //     this.state.lectures = this.state.lectures.substring(locationNumber + 14);\r\n  //     var endQuote4 = this.state.lectures.indexOf('\"');\r\n  //     var location = this.state.lectures.substring(0, endQuote4 - 1);\r\n\r\n  //     var daysWasOne = false;\r\n  //     var daysNumber = this.state.lectures.indexOf('\"days\":\"');\r\n  //     this.state.lectures = this.state.lectures.substring(daysNumber + 8);\r\n  //     var endQuote5 = this.state.lectures.indexOf('\"');\r\n  //     var days = this.state.lectures.substring(0, endQuote5);\r\n  //     if (days.match(/day/) != null) {\r\n  //       if (days.match(/day/g).length > 1) {\r\n  //         days =\r\n  //           days.substring(0, days.indexOf(\",\")) +\r\n  //           \",\" +\r\n  //           days.substring(days.indexOf(\",\") + 2, days.length - 2);\r\n  //         var index = days.indexOf(\",\");\r\n  //         var day1 = days.substring(0, index);\r\n  //         var day2 = days.substring(index + 1);\r\n  //         days = [day1, day2];\r\n  //       } else {\r\n  //         days =\r\n  //           '\"' +\r\n  //           days.substring(0, days.indexOf(\",\")) +\r\n  //           '\",' +\r\n  //           days.substring(days.indexOf(\",\") + 1, days.length - 2) +\r\n  //           '\"';\r\n  //         days = days.substring(0, days.length - 3);\r\n  //         days = days.substring(1, days.length - 1);\r\n  //         days = [days];\r\n  //         daysWasOne = true;\r\n  //       }\r\n  //     }\r\n\r\n  //     var startNumber = this.state.lectures.indexOf('\"startTime\":\"');\r\n  //     this.state.lectures = this.state.lectures.substring(startNumber + 13);\r\n  //     var endQuote6 = this.state.lectures.indexOf('\"');\r\n  //     var startTime = this.state.lectures.substring(0, endQuote6 - 3);\r\n  //     if (startTime.charAt(0) == \" \") startTime = startTime.substring(1);\r\n  //     startTime = parseFloat(startTime).toFixed(2);\r\n\r\n  //     var endNumber = this.state.lectures.indexOf('\"endTime\":\"');\r\n  //     this.state.lectures = this.state.lectures.substring(endNumber + 11);\r\n  //     var endQuote7 = this.state.lectures.indexOf('\"');\r\n  //     var endTime = this.state.lectures.substring(0, endQuote7 - 3);\r\n  //     endTime = parseFloat(endTime).toFixed(2);\r\n\r\n  //     if (daysWasOne) {\r\n  //       if (endTime - startTime < 2.0) {\r\n  //         days.push(\"Thursday\");\r\n  //       }\r\n  //     }\r\n  //     startTime =\r\n  //       \"\" +\r\n  //       startTime.substring(0, startTime.indexOf(\".\")) +\r\n  //       \":\" +\r\n  //       startTime.substring(startTime.indexOf(\".\") + 1);\r\n  //     endTime =\r\n  //       \"\" +\r\n  //       endTime.substring(0, endTime.indexOf(\".\")) +\r\n  //       \":\" +\r\n  //       endTime.substring(endTime.indexOf(\".\") + 1);\r\n\r\n  //     var semNumber = this.state.lectures.indexOf('\"semester\":\"');\r\n  //     this.state.lectures = this.state.lectures.substring(semNumber + 12);\r\n  //     var endQuote8 = this.state.lectures.indexOf('\"');\r\n  //     var semester = this.state.lectures.substring(0, endQuote8);\r\n\r\n  //     // Adding all the different Courses to an arraylist \"courses\"\r\n  //     var newCourse = new JsonClass(subject, semester);\r\n  //     var inThere = false;\r\n  //     var indexOfCourse = 0;\r\n  //     var i;\r\n  //     for (i = 0; i < courses31.length; i++) {\r\n  //       var boolean1 = courses31[i].equals2(newCourse);\r\n  //       if (boolean1 == true) {\r\n  //         inThere = true;\r\n  //         indexOfCourse = i;\r\n  //       }\r\n  //     }\r\n  //     if (!inThere) {\r\n  //       courses31.push(newCourse);\r\n  //       indexOfCourse = courses31.length - 1;\r\n  //     }\r\n  //     // Adding The Lecture to the Course\r\n  //     var lecture = new JsonLecture(\r\n  //       sectionNumber,\r\n  //       days,\r\n  //       startTime,\r\n  //       endTime,\r\n  //       location\r\n  //     );\r\n  //     courses31[indexOfCourse].addLecture(lecture);\r\n  //     //console.log(subject + \" \" + sectionNumber + \" \" + location + \" \" + days + \" \" + startTime + \" \" + endTime);\r\n  //     totaldatabaseEntriesLec++;\r\n  //   }\r\n\r\n  //   // Adding Tutorial Entries\r\n\r\n  //   while (this.state.tutorials.length > 1) {\r\n  //     var subjectStart = this.state.tutorials.indexOf('\"subject\":\"');\r\n  //     this.state.tutorials = this.state.tutorials.substring(subjectStart + 11);\r\n  //     var endQuote1 = this.state.tutorials.indexOf('\"');\r\n  //     var subject = this.state.tutorials.substring(0, endQuote1);\r\n\r\n  //     var classnumbertStart = this.state.tutorials.indexOf('\"classNumber\":\"');\r\n  //     this.state.tutorials = this.state.tutorials.substring(\r\n  //       classnumbertStart + 15\r\n  //     );\r\n  //     var endQuote2 = this.state.tutorials.indexOf('\"');\r\n  //     var classNumber = this.state.tutorials.substring(0, endQuote2);\r\n  //     subject = subject + classNumber;\r\n\r\n  //     var tutorialSectionNumber = this.state.tutorials.indexOf(\r\n  //       '\"tutorialSectionNumber\":\"\\\\\"'\r\n  //     );\r\n  //     this.state.tutorials = this.state.tutorials.substring(\r\n  //       tutorialSectionNumber + 27\r\n  //     );\r\n  //     var endQuote3 = this.state.tutorials.indexOf('\"');\r\n  //     var sectionNumber = this.state.tutorials.substring(0, endQuote3 - 1);\r\n  //     if (sectionNumber.indexOf(\" \") > -1) {\r\n  //       sectionNumber =\r\n  //         sectionNumber.substring(0, sectionNumber.indexOf(\" \")) +\r\n  //         sectionNumber.substring(sectionNumber.indexOf(\" \") + 1);\r\n  //     }\r\n\r\n  //     var locationNumber = this.state.tutorials.indexOf('\"location\":\"\\\\\"');\r\n  //     this.state.tutorials = this.state.tutorials.substring(\r\n  //       locationNumber + 14\r\n  //     );\r\n  //     var endQuote4 = this.state.tutorials.indexOf('\"');\r\n  //     var location = this.state.tutorials.substring(0, endQuote4 - 1);\r\n\r\n  //     var daysNumber = this.state.tutorials.indexOf('\"days\":\"');\r\n  //     this.state.tutorials = this.state.tutorials.substring(daysNumber + 8);\r\n  //     var endQuote5 = this.state.tutorials.indexOf('\"');\r\n  //     var days = this.state.tutorials.substring(0, endQuote5);\r\n  //     if (days.match(/day/) != null) {\r\n  //       if (days.match(/day/g).length == 1) {\r\n  //         days =\r\n  //           '\"' +\r\n  //           days.substring(0, days.indexOf(\",\")) +\r\n  //           '\",' +\r\n  //           days.substring(days.indexOf(\",\") + 1, days.length - 2) +\r\n  //           '\"';\r\n  //         days = days.substring(0, days.length - 3);\r\n  //         days = days.substring(1, days.length - 1);\r\n  //         days = [days];\r\n  //       }\r\n  //     }\r\n\r\n  //     var startNumber = this.state.tutorials.indexOf('\"startTime\":\"');\r\n  //     this.state.tutorials = this.state.tutorials.substring(startNumber + 13);\r\n  //     var endQuote6 = this.state.tutorials.indexOf('\"');\r\n  //     var startTime = this.state.tutorials.substring(0, endQuote6 - 3);\r\n  //     if (startTime.charAt(0) == \" \") startTime = startTime.substring(1);\r\n  //     startTime = parseFloat(startTime).toFixed(2);\r\n\r\n  //     var endNumber = this.state.tutorials.indexOf('\"endTime\":\"');\r\n  //     this.state.tutorials = this.state.tutorials.substring(endNumber + 11);\r\n  //     var endQuote7 = this.state.tutorials.indexOf('\"');\r\n  //     var endTime = this.state.tutorials.substring(0, endQuote7 - 3);\r\n  //     endTime = parseFloat(endTime).toFixed(2);\r\n\r\n  //     startTime =\r\n  //       \"\" +\r\n  //       startTime.substring(0, startTime.indexOf(\".\")) +\r\n  //       \":\" +\r\n  //       startTime.substring(startTime.indexOf(\".\") + 1);\r\n  //     endTime =\r\n  //       \"\" +\r\n  //       endTime.substring(0, endTime.indexOf(\".\")) +\r\n  //       \":\" +\r\n  //       endTime.substring(endTime.indexOf(\".\") + 1);\r\n\r\n  //     var semNumber = this.state.tutorials.indexOf('\"semester\":\"');\r\n  //     this.state.tutorials = this.state.tutorials.substring(semNumber + 12);\r\n  //     var endQuote8 = this.state.tutorials.indexOf('\"');\r\n  //     var semester = this.state.tutorials.substring(0, endQuote8);\r\n\r\n  //     if (days.length == 0) days = [\"Thursday\"];\r\n  //     else if (days[0] == \"\" || days[0] == \" \" || days[0] == null)\r\n  //       days = [\"Thursday\"];\r\n\r\n  //     var newCourse = new JsonClass(subject, semester);\r\n  //     var foundCourse = false;\r\n  //     var indexOfCourse = 0;\r\n  //     var i;\r\n  //     for (i = 0; i < courses31.length; i++) {\r\n  //       var boolean1 = courses31[i].equals2(newCourse);\r\n  //       if (boolean1 == true) {\r\n  //         foundCourse = true;\r\n  //         indexOfCourse = i;\r\n  //       }\r\n  //     }\r\n  //     if (!foundCourse) {\r\n  //       courses31.push(newCourse);\r\n  //       indexOfCourse = courses31.length - 1;\r\n  //     }\r\n\r\n  //     // Adding The Tutorial to the Lecture in the Course --> Find Right Lecture --> Add Tut\r\n  //     var lectureExists = false;\r\n  //     var tut = new JsonTut(sectionNumber, days, startTime, endTime, location);\r\n  //     var correctCourse = courses31[indexOfCourse];\r\n  //     var lectureSection = sectionNumber.substring(0, sectionNumber.length - 2);\r\n  //     for (i = 0; i < correctCourse.lecture.length; i++) {\r\n  //       if (correctCourse.lecture[i].section == lectureSection) {\r\n  //         lectureExists = true;\r\n  //         correctCourse.lecture[i].addTut(tut);\r\n  //       }\r\n  //     }\r\n  //     if (!lectureExists) {\r\n  //       var noLec = new JsonLecture();\r\n  //       noLec.addTut(tut);\r\n  //       correctCourse.addLecture(noLec);\r\n  //     }\r\n  //     //console.log(subject + \" \" + sectionNumber + \" \" + location + \" \" + days + \" \" + startTime + \" \" + endTime);\r\n  //     totaldatabaseEntriesTut++;\r\n  //     //console.log(subject + \" \" + sectionNumber + \" \" + location + \" \" + days + \" \" + startTime + \" \" + endTime);\r\n  //   }\r\n\r\n  //   // Gathering Info from Labs\r\n  //   while (this.state.labs.length > 1) {\r\n  //     var subjectStart = this.state.labs.indexOf('\"subject\":\"');\r\n  //     this.state.labs = this.state.labs.substring(subjectStart + 11);\r\n  //     var endQuote1 = this.state.labs.indexOf('\"');\r\n  //     var subject = this.state.labs.substring(0, endQuote1);\r\n\r\n  //     var classnumbertStart = this.state.labs.indexOf('\"classNumber\":\"');\r\n  //     this.state.labs = this.state.labs.substring(classnumbertStart + 15);\r\n  //     var endQuote2 = this.state.labs.indexOf('\"');\r\n  //     var classNumber = this.state.labs.substring(0, endQuote2);\r\n  //     subject = subject + classNumber;\r\n\r\n  //     var labSectionNumber = this.state.labs.indexOf('\"labSectionNumber\":\"\\\\\"');\r\n  //     this.state.labs = this.state.labs.substring(labSectionNumber + 22);\r\n  //     var endQuote3 = this.state.labs.indexOf('\"');\r\n  //     var sectionNumber = this.state.labs.substring(0, endQuote3 - 1);\r\n\r\n  //     var locationNumber = this.state.labs.indexOf('\"location\":\"\\\\\"');\r\n  //     this.state.labs = this.state.labs.substring(locationNumber + 14);\r\n  //     var endQuote4 = this.state.labs.indexOf('\"');\r\n  //     var location = this.state.labs.substring(0, endQuote4 - 1);\r\n\r\n  //     var daysWasOne = false;\r\n  //     var daysNumber = this.state.labs.indexOf('\"days\":\"');\r\n  //     this.state.labs = this.state.labs.substring(daysNumber + 8);\r\n  //     var endQuote5 = this.state.labs.indexOf('\"');\r\n  //     var days = this.state.labs.substring(0, endQuote5);\r\n  //     if (days.match(/day/) != null) {\r\n  //       if (days.match(/day/g).length > 1) {\r\n  //         days =\r\n  //           days.substring(0, days.indexOf(\",\")) +\r\n  //           \",\" +\r\n  //           days.substring(days.indexOf(\",\") + 2, days.length - 2);\r\n  //         var index = days.indexOf(\",\");\r\n  //         var day1 = days.substring(0, index);\r\n  //         var day2 = days.substring(index + 1);\r\n  //         days = [day1, day2];\r\n  //       } else {\r\n  //         days =\r\n  //           '\"' +\r\n  //           days.substring(0, days.indexOf(\",\")) +\r\n  //           '\",' +\r\n  //           days.substring(days.indexOf(\",\") + 1, days.length - 2) +\r\n  //           '\"';\r\n  //         days = days.substring(0, days.length - 3);\r\n  //         days = days.substring(1, days.length - 1);\r\n  //         days = [days];\r\n  //         daysWasOne = true;\r\n  //       }\r\n  //     }\r\n\r\n  //     var startNumber = this.state.labs.indexOf('\"startTime\":\"');\r\n  //     this.state.labs = this.state.labs.substring(startNumber + 13);\r\n  //     var endQuote6 = this.state.labs.indexOf('\"');\r\n  //     var startTime = this.state.labs.substring(0, endQuote6 - 3);\r\n  //     if (startTime.charAt(0) == \" \") startTime = startTime.substring(1);\r\n  //     startTime = parseFloat(startTime).toFixed(2);\r\n\r\n  //     var endNumber = this.state.labs.indexOf('\"endTime\":\"');\r\n  //     this.state.labs = this.state.labs.substring(endNumber + 11);\r\n  //     var endQuote7 = this.state.labs.indexOf('\"');\r\n  //     var endTime = this.state.labs.substring(0, endQuote7 - 3);\r\n  //     endTime = parseFloat(endTime).toFixed(2);\r\n\r\n  //     if (days.length == 0) days = [\"Thursday\"];\r\n  //     else if (days[0] == \"\" || days[0] == \" \" || days[0] == null)\r\n  //       days = [\"Thursday\"];\r\n  //     startTime =\r\n  //       \"\" +\r\n  //       startTime.substring(0, startTime.indexOf(\".\")) +\r\n  //       \":\" +\r\n  //       startTime.substring(startTime.indexOf(\".\") + 1);\r\n  //     endTime =\r\n  //       \"\" +\r\n  //       endTime.substring(0, endTime.indexOf(\".\")) +\r\n  //       \":\" +\r\n  //       endTime.substring(endTime.indexOf(\".\") + 1);\r\n\r\n  //     var semNumber = this.state.labs.indexOf('\"semester\":\"');\r\n  //     this.state.labs = this.state.labs.substring(semNumber + 12);\r\n  //     var endQuote8 = this.state.labs.indexOf('\"');\r\n  //     var semester = this.state.labs.substring(0, endQuote8);\r\n\r\n  //     // Adding all the different Courses to an arraylist \"courses\"\r\n  //     var newCourse = new JsonClass(subject, semester);\r\n  //     var indexOfCourse = 0;\r\n  //     var i;\r\n  //     for (i = 0; i < courses31.length; i++) {\r\n  //       var boolean1 = courses31[i].equals2(newCourse);\r\n  //       if (boolean1 == true) {\r\n  //         indexOfCourse = i;\r\n  //       }\r\n  //     }\r\n  //     // Adding The Lecture to the Course\r\n  //     var labby = new JsonLecture(\r\n  //       sectionNumber,\r\n  //       days,\r\n  //       startTime,\r\n  //       endTime,\r\n  //       location\r\n  //     );\r\n  //     courses31[indexOfCourse].addLab(labby);\r\n  //     //console.log(subject + \" \" + sectionNumber + \" \" + location + \" \" + days + \" \" + startTime + \" \" + endTime);\r\n  //     totaldatabaseEntriesLab++;\r\n  //   }\r\n\r\n  //   // Displaying Results\r\n  //   courses31.pop();\r\n  //   console.log(\r\n  //     \"Got #\" + totaldatabaseEntriesLec + \" Lecture entries from database\"\r\n  //   );\r\n  //   console.log(\r\n  //     \"Got #\" + totaldatabaseEntriesTut + \" Tutorial entries from database\"\r\n  //   );\r\n  //   console.log(\r\n  //     \"Got #\" + totaldatabaseEntriesLab + \" Lab entries from database\"\r\n  //   );\r\n  //   this.state.dataCourses = courses31;\r\n  //   this.regEx2();\r\n  //   console.log(this.state.dataCourses);\r\n  //   // Removing Courses Already taken from set\r\n  //   if (this.state.loggedIn) {\r\n  //     var jjj;\r\n  //     while (this.state.coursesTaken.length > 1) {\r\n  //       var startingQuote = this.state.coursesTaken.indexOf('\"');\r\n  //       this.state.coursesTaken = this.state.coursesTaken.substring(\r\n  //         startingQuote + 1\r\n  //       );\r\n  //       var endingQuote = this.state.coursesTaken.indexOf('\"');\r\n  //       var course = this.state.coursesTaken.substring(0, endingQuote);\r\n  //       course =\r\n  //         course.substring(0, course.indexOf(\" \")) +\r\n  //         course.substring(course.indexOf(\" \") + 1);\r\n  //       this.state.coursesTaken = this.state.coursesTaken.substring(9);\r\n  //       for (jjj = 0; jjj < this.state.dataCourses.length; jjj++) {\r\n  //         if (this.state.dataCourses[jjj].course == course) {\r\n  //           this.state.dataCourses.splice(jjj, 1);\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   // Removing Undefined Lectures from set\r\n  //   var jarjar, jarjab;\r\n  //   for (jarjar = 0; jarjar < this.state.dataCourses.length; jarjar++) {\r\n  //     for (\r\n  //       jarjab = 0;\r\n  //       jarjab < this.state.dataCourses[jarjar].lecture.length;\r\n  //       jarjab++\r\n  //     ) {\r\n  //       if (this.state.dataCourses[jarjar].lecture[jarjab] != null) {\r\n  //         if (\r\n  //           this.state.dataCourses[jarjar].lecture[jarjab].section == undefined\r\n  //         ) {\r\n  //           this.state.dataCourses[jarjar].lecture.splice(jarjab, 1);\r\n  //           jarjab = -1;\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   // Placing Courses into Semesters\r\n  //   var coursesFall = [];\r\n  //   var coursesWinter = [];\r\n  //   var coursesSummer = [];\r\n  //   for (i = 0; i < courses31.length; i++) {\r\n  //     if (courses31[i].semester == \"Fall\") {\r\n  //       coursesFall.push(courses31[i]);\r\n  //     } else if (courses31[i].semester == \"Winter\") {\r\n  //       coursesWinter.push(courses31[i]);\r\n  //     } else {\r\n  //       coursesSummer.push(courses31[i]);\r\n  //     }\r\n  //   }\r\n  //   var j, k, a, b;\r\n  //   for (i = 0; i < courses31.length; i++) {\r\n  //     // lecture removing duplicates\r\n  //     if (courses31[i].lecture != null) {\r\n  //       for (j = 0; j < courses31[i].lecture.length; j++) {\r\n  //         for (k = 0; k < courses31[i].lecture.length; k++) {\r\n  //           if (courses31[i].lecture[j] != null) {\r\n  //             if (\r\n  //               courses31[i].lecture[j].section ==\r\n  //               courses31[i].lecture[k].section &&\r\n  //               courses31[i].lecture[j].startTime ==\r\n  //               courses31[i].lecture[k].startTime &&\r\n  //               courses31[i].lecture[j].endTime ==\r\n  //               courses31[i].lecture[k].endTime &&\r\n  //               courses31[i].lecture[j].room != courses31[i].lecture[k].room &&\r\n  //               j != k\r\n  //             ) {\r\n  //               courses31[i].lecture[j].room +=\r\n  //                 \" or \" + courses31[i].lecture[k].room;\r\n  //               courses31[i].lecture.splice(k, 1);\r\n  //             }\r\n  //           }\r\n  //         }\r\n  //         if (courses31[i].lecture[j] != null) {\r\n  //           if (courses31[i].lecture[j].tutorial != null) {\r\n  //             for (b = 0; b < courses31[i].lecture[j].tutorial.length; b++) {\r\n  //               for (a = 0; a < courses31[i].lecture[j].tutorial.length; a++) {\r\n  //                 if (courses31[i].lecture[j].tutorial[b] != null) {\r\n  //                   if (\r\n  //                     courses31[i].lecture[j].tutorial[b].section ==\r\n  //                     courses31[i].lecture[j].tutorial[a].section &&\r\n  //                     courses31[i].lecture[j].tutorial[b].startTime ==\r\n  //                     courses31[i].lecture[j].tutorial[a].startTime &&\r\n  //                     courses31[i].lecture[j].tutorial[b].endTime ==\r\n  //                     courses31[i].lecture[j].tutorial[a].endTime &&\r\n  //                     courses31[i].lecture[j].tutorial[b].room !=\r\n  //                     courses31[i].lecture[j].tutorial[a].room &&\r\n  //                     a != b\r\n  //                   ) {\r\n  //                     courses31[i].lecture[j].tutorial[b].room +=\r\n  //                       \" or \" + courses31[i].lecture[j].tutorial[a].room;\r\n  //                     courses31[i].lecture[j].tutorial.splice(a, 1);\r\n  //                     a = -1;\r\n  //                   }\r\n  //                 }\r\n  //               }\r\n  //             }\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     // lab removing duplicates\r\n  //     if (courses31[i].lab != null) {\r\n  //       for (a = 0; a < courses31[i].lab.length; a++) {\r\n  //         for (k = 0; k < courses31[i].lab.length; k++) {\r\n  //           if (\r\n  //             courses31[i].lab[a].section == courses31[i].lab[k].section &&\r\n  //             courses31[i].lab[a].startTime == courses31[i].lab[k].startTime &&\r\n  //             courses31[i].lab[a].endTime == courses31[i].lab[k].endTime &&\r\n  //             courses31[i].lab[a].room != courses31[i].lab[k].room &&\r\n  //             a != k\r\n  //           ) {\r\n  //             courses31[i].lab[a].room += \" or \" + courses31[i].lab[k].room;\r\n  //             courses31[i].lab.splice(k, 1);\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   this.state.coursesFall = coursesFall;\r\n  //   this.state.coursesWinter = coursesWinter;\r\n  //   this.state.coursesSummer = coursesSummer;\r\n  //   let printable = \"\";\r\n  //   for (let kpop = 0; kpop < this.state.coursesFall.length; kpop++) {\r\n  //     printable += this.state.coursesFall[kpop].course + \" \" + this.state.coursesFall[kpop].semester + \"<br/>\";\r\n  //   }\r\n  //   for (let kpop = 0; kpop < this.state.coursesWinter.length; kpop++) {\r\n  //     printable += this.state.coursesWinter[kpop].course + \" \" + this.state.coursesWinter[kpop].semester + \"<br/>\";\r\n  //   }\r\n  //   for (let kpop = 0; kpop < this.state.coursesSummer.length; kpop++) {\r\n  //     printable += this.state.coursesSummer[kpop].course + \" \" + this.state.coursesSummer[kpop].semester + \"<br/>\";\r\n  //   }\r\n  //   this.state.printme = printable;\r\n  //   //this.state.courses2 = courses31; //CHANGE TO GET PROPER COURSES\r\n  // }\r\n  // regEx2() {\r\n  //   //console.log(this.state.dataCourses);\r\n  //   //console.log(data1.sequence);\r\n  //   while (this.state.Courses.length > 1) {\r\n  //     var titleStart = this.state.Courses.indexOf('\"courseTitle\":\"');\r\n  //     this.state.Courses = this.state.Courses.substring(titleStart + 15);\r\n  //     var endQuote1 = this.state.Courses.indexOf('\"');\r\n  //     var title = this.state.Courses.substring(0, endQuote1);\r\n\r\n  //     var subjectStart = this.state.Courses.indexOf('\"subject\":\"');\r\n  //     this.state.Courses = this.state.Courses.substring(subjectStart + 11);\r\n  //     var endQuote2 = this.state.Courses.indexOf('\"');\r\n  //     var subject = this.state.Courses.substring(0, endQuote2);\r\n\r\n  //     var numberStart = this.state.Courses.indexOf('\"classNumber\":\"');\r\n  //     this.state.Courses = this.state.Courses.substring(numberStart + 15);\r\n  //     var endQuote3 = this.state.Courses.indexOf('\"');\r\n  //     var courseNumber = this.state.Courses.substring(0, endQuote3);\r\n\r\n  //     var creditsStart = this.state.Courses.indexOf('\"credits\":\"');\r\n  //     this.state.Courses = this.state.Courses.substring(creditsStart + 11);\r\n  //     var endQuote4 = this.state.Courses.indexOf('\"');\r\n  //     var creditNumber = this.state.Courses.substring(0, endQuote4);\r\n\r\n  //     var prereqStart = this.state.Courses.search('\"prerequisites\":\"');\r\n  //     this.state.Courses = this.state.Courses.substring(prereqStart + 17);\r\n  //     var endQuote5 = this.state.Courses.search('\"');\r\n  //     var prereqs = this.state.Courses.substring(0, endQuote5);\r\n  //     var potentialSPace = prereqs.charAt(0);\r\n  //     if (potentialSPace == \" \") prereqs = prereqs.substring(1);\r\n  //     while (prereqs.indexOf(\"<==>\") > -1) {\r\n  //       var weirdshi = prereqs.indexOf(\"<==>\");\r\n  //       prereqs =\r\n  //         prereqs.substring(0, weirdshi) +\r\n  //         \" or \" +\r\n  //         prereqs.substring(weirdshi + 4);\r\n  //     }\r\n  //     while (prereqs.search(/\\d COMP/) > -1) {\r\n  //       var starter = prereqs.search(/\\d COMP/);\r\n  //       prereqs =\r\n  //         prereqs.substring(0, starter + 1) +\r\n  //         \" and COMP\" +\r\n  //         prereqs.substring(starter + 6);\r\n  //     }\r\n  //     while (prereqs.search(/\\d SOEN/) > -1) {\r\n  //       var starter = prereqs.search(/\\d SOEN/);\r\n  //       prereqs =\r\n  //         prereqs.substring(0, starter + 1) +\r\n  //         \" and SOEN\" +\r\n  //         prereqs.substring(starter + 6);\r\n  //     }\r\n  //     while (prereqs.search(/\\d MATH/) > -1) {\r\n  //       var starter = prereqs.search(/\\d MATH/);\r\n  //       prereqs =\r\n  //         prereqs.substring(0, starter + 1) +\r\n  //         \" and MATH\" +\r\n  //         prereqs.substring(starter + 6);\r\n  //     }\r\n  //     while (prereqs.search(/\\d ENGR/) > -1) {\r\n  //       var starter = prereqs.search(/\\d ENGR/);\r\n  //       prereqs =\r\n  //         prereqs.substring(0, starter + 1) +\r\n  //         \" and ENGR\" +\r\n  //         prereqs.substring(starter + 6);\r\n  //     }\r\n  //     while (prereqs.search(/\\d ENCS/) > -1) {\r\n  //       var starter = prereqs.search(/\\d ENCS/);\r\n  //       prereqs =\r\n  //         prereqs.substring(0, starter + 1) +\r\n  //         \" and ENCS\" +\r\n  //         prereqs.substring(starter + 6);\r\n  //     }\r\n\r\n  //     var coreqStart = this.state.Courses.search('\"corequisites\":\"');\r\n  //     this.state.Courses = this.state.Courses.substring(coreqStart + 16);\r\n  //     var endQuote6 = this.state.Courses.search('\"');\r\n  //     var coreqs = this.state.Courses.substring(0, endQuote6);\r\n  //     var potentialSPace2 = coreqs.charAt(0);\r\n  //     if (potentialSPace2 == \" \") coreqs = coreqs.substring(1);\r\n  //     while (coreqs.indexOf(\"<==>\") > -1) {\r\n  //       var weirdshi = coreqs.indexOf(\"<==>\");\r\n  //       coreqs =\r\n  //         coreqs.substring(0, weirdshi) +\r\n  //         \" or \" +\r\n  //         coreqs.substring(weirdshi + 4);\r\n  //     }\r\n  //     while (coreqs.search(/\\d COMP/) > -1) {\r\n  //       var starter = coreqs.search(/\\d COMP/);\r\n  //       coreqs =\r\n  //         coreqs.substring(0, starter + 1) +\r\n  //         \" and COMP\" +\r\n  //         coreqs.substring(starter + 6);\r\n  //     }\r\n  //     while (coreqs.search(/\\d SOEN/) > -1) {\r\n  //       var starter = coreqs.search(/\\d SOEN/);\r\n  //       coreqs =\r\n  //         coreqs.substring(0, starter + 1) +\r\n  //         \" and SOEN\" +\r\n  //         coreqs.substring(starter + 6);\r\n  //     }\r\n  //     while (coreqs.search(/\\d MATH/) > -1) {\r\n  //       var starter = coreqs.search(/\\d MATH/);\r\n  //       coreqs =\r\n  //         coreqs.substring(0, starter + 1) +\r\n  //         \" and MATH\" +\r\n  //         coreqs.substring(starter + 6);\r\n  //     }\r\n  //     while (prereqs.search(/\\d ENGR/) > -1) {\r\n  //       var starter = coreqs.search(/\\d ENGR/);\r\n  //       coreqs =\r\n  //         coreqs.substring(0, starter + 1) +\r\n  //         \" and ENGR\" +\r\n  //         coreqs.substring(starter + 6);\r\n  //     }\r\n  //     while (coreqs.search(/\\d ENCS/) > -1) {\r\n  //       var starter = coreqs.search(/\\d ENCS/);\r\n  //       coreqs =\r\n  //         coreqs.substring(0, starter + 1) +\r\n  //         \" and ENCS\" +\r\n  //         coreqs.substring(starter + 6);\r\n  //     }\r\n  //     if (prereqs.indexOf(\",\") > -1) prereqs = \"\";\r\n  //     if (title != \"\") {\r\n  //       subject = subject + courseNumber;\r\n  //       //var cc = new Course(title, subject, courseNumber, creditNumber, prereqs, coreqs);\r\n  //       var i;\r\n  //       for (i = 0; i < this.state.dataCourses.length; i++) {\r\n  //         if (this.state.dataCourses[i].course == subject) {\r\n  //           this.state.dataCourses[i].name = title;\r\n  //           this.state.dataCourses[i].credit = parseFloat(creditNumber);\r\n  //           if (prereqs != \"\") {\r\n  //             if (prereqs.charAt(prereqs.length - 1) == \" \") {\r\n  //               prereqs = prereqs.substring(0, prereqs.length - 1);\r\n  //             }\r\n  //             if (prereqs.search(/[A-Z][A-Z][A-Z][A-Z]\\s[0-9][0-9][0-9]/) > -1) {\r\n  //               prereqs = prereqs.substring(0, prereqs.search(/[A-Z][A-Z][A-Z][A-Z]\\s[0-9][0-9][0-9]/) + 4) + prereqs.substring(prereqs.search(/[A-Z][A-Z][A-Z][A-Z]\\s[0-9][0-9][0-9]/) + 5);\r\n  //             }\r\n  //             this.state.dataCourses[i].prerequisites.push(prereqs);\r\n  //           }\r\n  //           if (coreqs != \"\") {\r\n  //             if (coreqs.charAt(coreqs.length - 1) == \" \") {\r\n  //               coreqs = coreqs.substring(0, coreqs.length - 1);\r\n  //             }\r\n  //             if (coreqs.search(/[A-Z][A-Z][A-Z][A-Z]\\s[0-9][0-9][0-9]/) > -1) {\r\n  //               coreqs = coreqs.substring(0, coreqs.search(/[A-Z][A-Z][A-Z][A-Z]\\s[0-9][0-9][0-9]/) + 4) + coreqs.substring(coreqs.search(/[A-Z][A-Z][A-Z][A-Z]\\s[0-9][0-9][0-9]/) + 5);\r\n  //             }\r\n  //             this.state.dataCourses[i].corequisites.push(coreqs);\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //       //console.log(title + \" \" + subject + \" \" + creditNumber + \" Pre: \" + prereqs + \" Co: \" + coreqs);\r\n  //     }\r\n  //   }\r\n  // }\r\n  render() {\r\n    const { selectedCourses } = this.props.location;\r\n    console.log(selectedCourses);\r\n\r\n    let displayInfo =\r\n      selectedCourses === undefined || selectedCourses.length === 0 ? (\r\n        <h3>No Class Chosen Yet</h3>\r\n      ) : (\r\n        selectedCourses.map(element => (\r\n          <tr\r\n            style={{\r\n              margin: \"auto\",\r\n              backgroundColor: element.course_color\r\n            }}\r\n          >\r\n            <td style={{ padding: \"20px\" }}>\r\n              <h5>{element.course_number}</h5>\r\n              <p>{element.course_name}</p>\r\n              <p>{element.course_semester}</p>\r\n              <p>{element.course_year}</p>\r\n            </td>\r\n            <td style={{ padding: \"20px\" }}>\r\n              <h5>LEC</h5>\r\n              <p>Section: {element.lecture_section}</p>\r\n              <p>Room: {element.lecture_room}</p>\r\n              <p>Days: {element.lecture_days}</p>\r\n              <p>Start Time: {element.lecture_start}</p>\r\n              <p>End Time: {element.lecture_end}</p>\r\n            </td>\r\n\r\n            {element.tutorial_section !== \"\" ? (\r\n              <td style={{ padding: \"20px\" }}>\r\n                <h5>TUT</h5>\r\n                <p>Section: {element.tutorial_section}</p>\r\n                <p>Room: {element.tutorial_room}</p>\r\n                <p>Days: {element.tutorial_days}</p>\r\n                <p>Start Time: {element.tutorial_start}</p>\r\n                <p>End Time: {element.tutorial_end}</p>\r\n              </td>\r\n            ) : (\r\n              <td />\r\n            )}\r\n            {element.lab_section !== \"\" ? (\r\n              <td style={{ padding: \"20px\" }}>\r\n                <h5>LAB</h5>\r\n                <p>Section: {element.lab_section}</p>\r\n                <p>Room: {element.lab_room}</p>\r\n                <p>Days: {element.lab_days}</p>\r\n                <p>Start Time: {element.lab_start}</p>\r\n                <p>End Time: {element.lab_end}</p>\r\n              </td>\r\n            ) : (\r\n              <td />\r\n            )}\r\n          </tr>\r\n        ))\r\n      );\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"container\">\r\n          <div className=\"jumbotron j-greetings\">\r\n            <h1>This is your Finalized Format</h1>\r\n            <hr color=\"#7E1530\" />\r\n            <div>\r\n              <table style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                {displayInfo}\r\n              </table>\r\n            </div>\r\n            {/* <p id='pasteMe7000' name='pasteMe7000' class=\"pasteMe7000\">\r\n            </p>\r\n            <hr color=\"#7E1530\" /> */}\r\n            <Link to=\"/select-semester\">\r\n              <Button text=\"Export as PDF\" />\r\n            </Link>\r\n            <Link to=\"/course-selection-menu\">\r\n              <Button text=\"Back to Course Selection\" />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FinalizeExportSem;\r\n"]},"metadata":{},"sourceType":"module"}