{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\src\\\\pdfSequenceGenerator.js\";\nimport React from \"react\";\nimport * as data from \"./data/courses.json\";\nimport * as jsPDF from \"jspdf\";\nimport { Table, Modal, Container, Row, Col } from \"react-bootstrap\";\nimport Button from \"./components/Button\";\nimport * as html2canvas from \"html2canvas\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nvar PdfSequenceGenerator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PdfSequenceGenerator, _React$Component);\n\n  function PdfSequenceGenerator() {\n    var _this;\n\n    _classCallCheck(this, PdfSequenceGenerator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PdfSequenceGenerator).call(this));\n\n    _this.convertToPDF = function () {\n      var input = document.getElementById(\"divToPrint\" + _this.props.year);\n      var dummies = document.getElementsByClassName(\"dummyRow\"); //This block below formats the div-to-print properly so it is sized correctly on the pdf\n\n      [].forEach.call(dummies, function (row) {\n        row.style.display = \"none\";\n      });\n      var tableCols = document.getElementsByClassName(\"tableCol\");\n      [].forEach.call(tableCols, function (tableCol) {\n        tableCol.classList.add(\"col-md-12\");\n      });\n      var reduce = document.querySelectorAll(\"table, #pdfTable\");\n      [].forEach.call(reduce, function (col) {\n        col.style.width = \"606px\";\n      });\n      document.getElementById(\"soen341\").style.width = \"896px\"; //End of formatting code\n\n      html2canvas(input, {\n        dpi: 9000,\n        //supposed to make it less blurry on retina\n        scale: 1.2 //approximately fills the width of pdf page with the sequence table\n\n      }).then(function (canvas) {\n        var imgData = canvas.toDataURL(\"image/png\");\n        var pdf = new jsPDF();\n        pdf.addImage(imgData, \"JPEG\", 0, 0);\n        pdf.output(\"/jimmyTest.pdf\");\n        pdf.save(\"jimmyTest.pdf\");\n      }).then(function () {\n        //This then() call will put back the div-to-print to its original size\n        [].forEach.call(dummies, function (row) {\n          row.style.display = \"contents\";\n        });\n        [].forEach.call(tableCols, function (tableCol) {\n          tableCol.classList.remove(\"col-md-12\");\n        });\n        [].forEach.call(reduce, function (col) {\n          col.style.width = \"100%\";\n        });\n        document.getElementById(\"soen341\").style.width = \"100%\";\n      });\n    };\n\n    _this.move = function (source, destination, droppableSource, droppableDestination) {\n      var sourceClone = Array.from(source);\n      var destClone = Array.from(destination);\n\n      var _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n          _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n          removed = _sourceClone$splice2[0]; // replace 1 element at droppableSource.index with nothing (remove it)\n\n\n      var inOtherSemester = destination.some(function (course) {\n        return course.course === removed.course;\n      });\n\n      if (inOtherSemester) {\n        return;\n      }\n\n      destClone.splice(droppableDestination.index, 0, removed); // remove no element at droppableDestination.index and add removed (add)\n\n      var result = {};\n      result[droppableSource.droppableId] = sourceClone;\n      result[droppableDestination.droppableId] = destClone;\n      return result;\n    };\n\n    _this.reorder = function (list, startIndex, endIndex) {\n      var result = Array.from(list);\n\n      var _result$splice = result.splice(startIndex, 1),\n          _result$splice2 = _slicedToArray(_result$splice, 1),\n          removed = _result$splice2[0]; // remove 1 element at startIndex and replace with nothing\n\n\n      result.splice(endIndex, 0, removed); // remove no element at endIndex and add removed\n\n      return result;\n    };\n\n    _this.getRowStyle = function (isDragging, draggableStyle) {\n      return _objectSpread({}, draggableStyle);\n    };\n\n    _this.getTableStyle = function (isDraggingOver) {\n      return {//Change table properties during drag\n        //background: isDraggingOver? 'blue': 'red'\n      };\n    };\n\n    _this.onDragEnd = function (result) {\n      console.log(result);\n      var source = result.source,\n          destination = result.destination; // dropped outside a droppable element\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        var items = _this.reorder(_this.state[source.droppableId], source.index, destination.index);\n\n        _this.setState(_defineProperty({}, source.droppableId, items));\n      } else {\n        var _this$setState2;\n\n        var moved = _this.move(_this.state[source.droppableId], _this.state[destination.droppableId], source, destination);\n\n        if (!moved) {\n          return;\n        }\n\n        _this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, source.droppableId, moved[source.droppableId]), _defineProperty(_this$setState2, destination.droppableId, moved[destination.droppableId]), _this$setState2), function () {\n          console.log(_this.state);\n          console.log(moved);\n        });\n      }\n    };\n\n    _this.addClass = function (falltable, wintertable, summertable) {\n      var fall = _this.state.selectedCoursesFall; //Keep track of user selected classes for Fall\n\n      var winter = _this.state.selectedCoursesWinter; //Keep track of user selected classes for Winter\n\n      var summer = _this.state.selectedCoursesSummer; //Keep track of user selected classes for Summer\n\n      var input = document.getElementById(\"add-class\").value; //Get user input\n\n      var classList = _this.state.courses; //Gets the whole list of courses of concordia\n\n      var errorMessage = document.getElementById(\"addStatus\");\n      var semester = document.getElementById(\"semester\").value;\n      var addedClass; //object\n\n      var classExists = false;\n\n      for (var i = 0; i < fall.length; i++) {\n        //This loop prevents duplicates for fall table\n        if (fall[i].course === input) {\n          errorMessage.innerHTML = \"You have already added this class\";\n          return;\n        }\n      }\n\n      for (var _i = 0; _i < winter.length; _i++) {\n        //This loop prevents duplicates for winter table\n        if (winter[_i].course === input) {\n          errorMessage.innerHTML = \"You have already added this class\";\n          return;\n        }\n      }\n\n      for (var _i2 = 0; _i2 < summer.length; _i2++) {\n        //This loop prevents duplicates for summer table\n        if (summer[_i2].course === input) {\n          errorMessage.innerHTML = \"You have already added this class\";\n          return;\n        }\n      }\n\n      for (var _i3 = 0; _i3 < classList.length; _i3++) {\n        // Finds if input class exists and stores it in addedClass\n        if (classList[_i3].course === input) {\n          addedClass = classList[_i3];\n          classExists = true;\n          break;\n        }\n      }\n\n      if (classExists === false) {\n        errorMessage.innerHTML = \"Invalid Class/Class Not Found\";\n        return;\n      }\n\n      var boool = false;\n\n      for (var _i4 = 0; _i4 < addedClass.semester.length; _i4++) {\n        if (semester === addedClass.semester[_i4]) {\n          boool = true;\n          break;\n        }\n      }\n\n      if (boool === false) {\n        var str = \"\";\n\n        for (var _i5 = 0; _i5 < addedClass.semester.length; _i5++) {\n          str += addedClass.semester[_i5] + \"<br />\";\n        }\n\n        errorMessage.innerHTML = \"This class is only offered in: <br />\" + str;\n        return;\n      }\n\n      switch (semester) {\n        case \"Fall\":\n          fall.push(addedClass);\n\n          _this.setState({\n            selectedCoursesFall: fall,\n            showAdd: !_this.state.showAdd\n          });\n\n          break;\n\n        case \"Summer\":\n          summer.push(addedClass);\n\n          _this.setState({\n            selectedCoursesSummer: summer,\n            showAdd: !_this.state.showAdd\n          });\n\n          break;\n\n        case \"Winter\":\n          winter.push(addedClass);\n\n          _this.setState({\n            selectedCoursesWinter: winter,\n            showAdd: !_this.state.showAdd\n          });\n\n          break;\n\n        default:\n      }\n\n      var totalNumberOfClasses = //Damn I really forgot why we need this\n      _this.state.selectedCoursesFall.length + _this.state.selectedCoursesSummer.length + _this.state.selectedCoursesWinter.length;\n      var yeetus = [];\n\n      for (var _i6 = 0; _i6 < 6; _i6++) {\n        /*Basically choose a year from current year up to 8 years later. Don't touch this*/\n        yeetus[_i6] = new Date().getFullYear() + _i6;\n      }\n\n      var years = yeetus.map(function (jimmy) {\n        return React.createElement(\"option\", {\n          value: jimmy,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, jimmy);\n      });\n\n      _this.bootlegUpdateSettings(falltable, wintertable, summertable);\n    };\n\n    _this.removeClass = function (falltable, wintertable, summertable) {\n      var fall = _this.state.selectedCoursesFall; //Keep track of user selected classes for Fall\n\n      var winter = _this.state.selectedCoursesWinter; //Keep track of user selected classes for Winter\n\n      var summer = _this.state.selectedCoursesSummer; //Keep track of user selected classes for Summer\n\n      var removedFallClass = document.getElementById(\"select-remove-fall\"); //selected value from drop down\n\n      var removedWinterClass = document.getElementById(\"select-remove-winter\"); //selected value from drop down\n\n      var removedSummerClass = document.getElementById(\"select-remove-summer\"); //selected value from drop down\n\n      if (removedFallClass === null) {\n        _this.setState({\n          showRemove: !_this.state.showRemove\n        });\n\n        return;\n      }\n\n      if (removedFallClass.value === \"Select A Class...\" && removedWinterClass.value === \"Select A Class...\" && removedSummerClass.value === \"Select A Class...\") {\n        document.getElementById(\"removeStatus\").innerHTML = \"You have not selected anything.\";\n        return;\n      }\n\n      fall = fall.filter(function (element) {\n        return element.course !== removedFallClass.value;\n      }); //Remove json course object from fall array\n\n      winter = winter.filter(function (element) {\n        return element.course !== removedWinterClass.value;\n      }); //Remove json course object from winter array\n\n      summer = summer.filter(function (element) {\n        return element.course !== removedSummerClass.value;\n      }); //Remove json course object from summer array\n\n      _this.setState({\n        selectedCoursesFall: fall,\n        selectedCoursesWinter: winter,\n        selectedCoursesSummer: summer,\n        showRemove: !_this.state.showRemove\n      });\n\n      _this.bootlegUpdateSettings(falltable, wintertable, summertable);\n    };\n\n    _this.updateSettings = function (falltable, wintertable, summertable) {\n      var semesterArray = []; //this.state.semesterDisplay will take on this value\n\n      var fallRemove = 0;\n      var winterRemove = 0;\n      var summerRemove = 0;\n\n      if (document.getElementById(\"fallSetting\")) {\n        fallRemove = document.getElementById(\"fallSetting\").value === \"Remove\" ? 1 : 0; //if removed, set 1 else 0\n\n        winterRemove = document.getElementById(\"winterSetting\").value === \"Remove\" ? 1 : 0;\n        summerRemove = document.getElementById(\"summerSetting\").value === \"Remove\" ? 1 : 0;\n      }\n\n      var numberOfSemesters = 3 - fallRemove - winterRemove - summerRemove; //Number of semester visible for the year\n\n      var division = numberOfSemesters === 0 ? 12 : 12 / numberOfSemesters; //The number used for the md attribute\n\n      var newID = \"mt-\" + division; //New id of the <Container />\n\n      var fall = {\n        semester: \"Fall\",\n        code: React.createElement(Col, {\n          className: \"tableCol\",\n          md: division,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, \"Fall\"), falltable)\n      };\n      var winter = {\n        semester: \"Winter\",\n        code: React.createElement(Col, {\n          className: \"tableCol\",\n          md: division,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, \"Winter\"), wintertable)\n      };\n      var summer = {\n        semester: \"Summer\",\n        code: React.createElement(Col, {\n          className: \"tableCol\",\n          md: division,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, \"Summer\"), summertable)\n      };\n      if (fallRemove === 0) semesterArray.push(fall);\n      if (winterRemove === 0) semesterArray.push(winter);\n      if (summerRemove === 0) semesterArray.push(summer);\n      var result = React.createElement(Container, {\n        className: newID,\n        id: \"divToPrint\" + _this.props.year,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, semesterArray.map(function (element) {\n        return element.code;\n      })));\n\n      _this.setState({\n        semesterDisplay: result,\n        semesterArray: semesterArray,\n        year: document.getElementById(\"settingYear\").value\n      });\n    };\n\n    _this.bootlegUpdateSettings = function (falltable, wintertable, summertable) {\n      //this just updates the tables\n      var semesterArray = _this.state.semesterArray ? _this.state.semesterArray : [{\n        semester: \"Fall\",\n        code: React.createElement(Col, {\n          className: \"tableCol\",\n          md: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }, \"Fall\"), falltable)\n      }, {\n        semester: \"Winter\",\n        code: React.createElement(Col, {\n          className: \"tableCol\",\n          md: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }, \"Winter\"), wintertable)\n      }, {\n        semester: \"Summer\",\n        code: React.createElement(Col, {\n          className: \"tableCol\",\n          md: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401\n          },\n          __self: this\n        }, \"Summer\"), summertable)\n      }]; //contains code for Col tags\n\n      var newArray = []; //New col tags array\n\n      semesterArray.forEach(function (element) {\n        if (element.semester === \"Fall\") {\n          element.code = React.createElement(Col, {\n            className: \"tableCol\",\n            md: 12 / semesterArray.length,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 412\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 413\n            },\n            __self: this\n          }, \"Fall\"), falltable);\n          newArray.push(element);\n        }\n\n        if (element.semester === \"Winter\") {\n          element.code = React.createElement(Col, {\n            className: \"tableCol\",\n            md: 12 / semesterArray.length,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 423\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 424\n            },\n            __self: this\n          }, \"Winter \"), wintertable);\n          newArray.push(element);\n        }\n\n        if (element.semester === \"Summer\") {\n          element.code = React.createElement(Col, {\n            className: \"tableCol\",\n            md: 12 / semesterArray.length,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 434\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 435\n            },\n            __self: this\n          }, \"Summer\"), summertable);\n          newArray.push(element);\n        }\n      });\n      var newID = \"mt-\" + 12 / newArray.length;\n      var result = React.createElement(Container, {\n        className: newID,\n        id: \"divToPrint\" + _this.props.year,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, newArray.map(function (element) {\n        return element.code;\n      })));\n\n      _this.setState({\n        semesterDisplay: result,\n        semesterArray: newArray\n      });\n    };\n\n    _this.state = {\n      courses: data.default.sequence,\n      selectedCoursesFall: [],\n      selectedCoursesWinter: [],\n      selectedCoursesSummer: [],\n      showAdd: false,\n      showRemove: false,\n      modify: false,\n      year: new Date().getFullYear(),\n      numberOfDisplayedSemesters: 3,\n      semesterDisplay: null,\n      //holds the code for the Container tag #divtoprint\n      semesterArray: null //Holds the Col tags\n\n    };\n    return _this;\n  }\n\n  _createClass(PdfSequenceGenerator, [{\n    key: \"render\",\n    // RENDER() HERE *********************************************************\n    value: function render() {\n      var _this2 = this;\n\n      var falltable = React.createElement(Table, {\n        id: \"pdfTable\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"Course\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, \"Class Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, \"Credit\"))), React.createElement(Droppable, {\n        droppableId: \"selectedCoursesFall\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, function (provided, snapshot) {\n        return React.createElement(\"tbody\", {\n          provided: provided,\n          style: _this2.getTableStyle(snapshot.isDraggingOver),\n          ref: provided.innerRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472\n          },\n          __self: this\n        }, _this2.state.selectedCoursesFall.map(function (course, index) {\n          return React.createElement(Draggable, {\n            key: \"key\" + index,\n            draggableId: \"f\" + index,\n            index: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 478\n            },\n            __self: this\n          }, function (provided, snapshot) {\n            return React.createElement(\"tr\", Object.assign({\n              style: _this2.getRowStyle(snapshot.isDragging, provided.draggableProps.style),\n              className: \"dragCourse\",\n              provided: provided,\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 484\n              },\n              __self: this\n            }), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 495\n              },\n              __self: this\n            }, course.course), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 496\n              },\n              __self: this\n            }, course.name), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 497\n              },\n              __self: this\n            }, course.credit));\n          });\n        }), React.createElement(\"tr\", {\n          className: \"dummyRow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503\n          },\n          __self: this\n        }, \"---\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504\n          },\n          __self: this\n        }, \"---\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505\n          },\n          __self: this\n        }, \"---\")));\n      }));\n      var wintertable = React.createElement(Table, {\n        id: \"pdfTable\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, \"Course\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, \"Class Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, \"Credit\"))), React.createElement(Droppable, {\n        droppableId: \"selectedCoursesWinter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, function (provided, snapshot) {\n        return React.createElement(\"tbody\", {\n          provided: provided,\n          style: _this2.getTableStyle(snapshot.isDraggingOver),\n          ref: provided.innerRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524\n          },\n          __self: this\n        }, _this2.state.selectedCoursesWinter.map(function (course, index) {\n          return React.createElement(Draggable, {\n            key: \"key\" + index,\n            draggableId: \"w\" + index,\n            index: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 530\n            },\n            __self: this\n          }, function (provided, snapshot) {\n            return React.createElement(\"tr\", Object.assign({\n              style: _this2.getRowStyle(snapshot.isDragging, provided.draggableProps.style),\n              className: \"dragCourse\",\n              provided: provided,\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 536\n              },\n              __self: this\n            }), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 547\n              },\n              __self: this\n            }, course.course), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 548\n              },\n              __self: this\n            }, course.name), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 549\n              },\n              __self: this\n            }, course.credit));\n          });\n        }), React.createElement(\"tr\", {\n          className: \"dummyRow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 555\n          },\n          __self: this\n        }, \"---\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 556\n          },\n          __self: this\n        }, \"---\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 557\n          },\n          __self: this\n        }, \"---\")));\n      }));\n      var summertable = React.createElement(Table, {\n        id: \"pdfTable\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \"Course\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, \"Class Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, \"Credit\"))), React.createElement(Droppable, {\n        droppableId: \"selectedCoursesSummer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, function (provided, snapshot) {\n        return React.createElement(\"tbody\", {\n          provided: provided,\n          style: _this2.getTableStyle(snapshot.isDraggingOver),\n          ref: provided.innerRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576\n          },\n          __self: this\n        }, _this2.state.selectedCoursesSummer.map(function (course, index) {\n          return React.createElement(Draggable, {\n            key: \"key\" + index,\n            draggableId: \"s\" + index,\n            index: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 582\n            },\n            __self: this\n          }, function (provided, snapshot) {\n            return React.createElement(\"tr\", Object.assign({\n              style: _this2.getRowStyle(snapshot.isDragging, provided.draggableProps.style),\n              className: \"dragCourse\",\n              provided: provided,\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 588\n              },\n              __self: this\n            }), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 599\n              },\n              __self: this\n            }, course.course), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 600\n              },\n              __self: this\n            }, course.name), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 601\n              },\n              __self: this\n            }, course.credit));\n          });\n        }), React.createElement(\"tr\", {\n          className: \"dummyRow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 606\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607\n          },\n          __self: this\n        }, \"---\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608\n          },\n          __self: this\n        }, \"---\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 609\n          },\n          __self: this\n        }, \"---\")));\n      }));\n      var removeOptions = React.createElement(Table, {\n        striped: true,\n        border: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }, \"Fall\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, \"Winter\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }, \"Summer\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"select-remove-fall\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      }, \"Select A Class...\"), this.state.selectedCoursesFall.map(function (element) {\n        return React.createElement(\"option\", {\n          value: element.course,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 630\n          },\n          __self: this\n        }, element.course);\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"select-remove-winter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }, \"Select A Class...\"), this.state.selectedCoursesWinter.map(function (element) {\n        return React.createElement(\"option\", {\n          value: element.course,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 639\n          },\n          __self: this\n        }, element.course);\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        id: \"select-remove-summer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }, \"Select A Class...\"), this.state.selectedCoursesSummer.map(function (element) {\n        return React.createElement(\"option\", {\n          value: element.course,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 648\n          },\n          __self: this\n        }, element.course);\n      })))));\n      var totalNumberOfClasses = this.state.selectedCoursesFall.length + this.state.selectedCoursesSummer.length + this.state.selectedCoursesWinter.length;\n      var yeetus = [];\n\n      for (var i = 0; i < 6; i++) {\n        /*Basically choose a year from current year up to 6 years later. Don't touch this*/\n        yeetus[i] = new Date().getFullYear() + i;\n      }\n\n      var years = yeetus.map(function (jimmy) {\n        return React.createElement(\"option\", {\n          value: jimmy,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 666\n          },\n          __self: this\n        }, jimmy);\n      });\n      var semesterDisplay = React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"tableCol\",\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      }, \"Fall\"), falltable), React.createElement(Col, {\n        className: \"tableCol\",\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      }, \"Winter \"), wintertable), React.createElement(Col, {\n        className: \"tableCol\",\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      }, \"Summer\"), summertable));\n      /**************************************** JSX here *******************************************************/\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690\n        },\n        __self: this\n      }, React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          padding: \"4rem 1rem\"\n        },\n        className: \"jumbotron j-greetings\",\n        id: \"soen341\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"divToPrint\" + this.props.year,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698\n        },\n        __self: this\n      }, \"Year \", this.props.year), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699\n        },\n        __self: this\n      }), this.state.semesterDisplay ? React.createElement(Container, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705\n        },\n        __self: this\n      }, this.state.semesterDisplay)) : React.createElement(Container, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        },\n        __self: this\n      }, semesterDisplay)\n      /* semesterDisplay is default 3 semester, the state version of this will change dynamically */\n      ), React.createElement(\"table\", {\n        style: {\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        },\n        __self: this\n      }, React.createElement(Button, {\n        text: \"+\",\n        onClick: function onClick() {\n          _this2.setState({\n            showAdd: !_this2.state.showAdd\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }, React.createElement(Button, {\n        text: \"-\",\n        onClick: function onClick() {\n          _this2.setState({\n            showRemove: !_this2.state.showRemove\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"mb5\",\n        text: \"PDF\",\n        onClick: this.convertToPDF,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      })))), React.createElement(Button, {\n        text: \"Sequence Settings\",\n        onClick: function onClick() {\n          return _this2.setState({\n            modify: !_this2.state.modify\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }))), React.createElement(Modal, {\n        show: this.state.showAdd,\n        onHide: function onHide() {\n          _this2.setState({\n            showAdd: !_this2.state.showAdd\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }, \"Add A Course\")), React.createElement(Modal.Body, {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767\n        },\n        __self: this\n      }, \"Select A Course You'd Like To Add \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"add-class\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        id: \"semester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Fall\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770\n        },\n        __self: this\n      }, \"Fall\"), React.createElement(\"option\", {\n        value: \"Winter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771\n        },\n        __self: this\n      }, \"Winter\"), React.createElement(\"option\", {\n        value: \"Summer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772\n        },\n        __self: this\n      }, \"Summer\")), React.createElement(\"p\", {\n        id: \"addStatus\",\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        text: \"Add Course\",\n        onClick: function onClick() {\n          return _this2.addClass(falltable, wintertable, summertable);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775\n        },\n        __self: this\n      }))), React.createElement(Modal, {\n        show: this.state.showRemove,\n        onHide: function onHide() {\n          _this2.setState({\n            showRemove: !_this2.state.showRemove\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790\n        },\n        __self: this\n      }, \"Remove A Course\")), React.createElement(Modal.Body, {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793\n        },\n        __self: this\n      }, \"Select A Course You'd Like To Remove \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793\n        },\n        __self: this\n      }), totalNumberOfClasses === 0 ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795\n        },\n        __self: this\n      }, \"No Classes Have Been Added Yet\") : removeOptions, React.createElement(\"p\", {\n        id: \"removeStatus\",\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        text: \"Remove Course\",\n        onClick: function onClick() {\n          return _this2.removeClass(falltable, wintertable, summertable);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      }))), React.createElement(Modal, {\n        show: this.state.modify,\n        onHide: function onHide() {\n          return _this2.setState({\n            modify: !_this2.state.modify\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815\n        },\n        __self: this\n      }, \"Sequence Settings\")), React.createElement(Modal.Body, {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        },\n        __self: this\n      }, \"Choose Year\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        id: \"settingYear\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826\n        },\n        __self: this\n      }, this.state.year), years)), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831\n        },\n        __self: this\n      }, \"Fall Semester\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 833\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        id: \"fallSetting\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Keep\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835\n        },\n        __self: this\n      }, \"Keep\"), React.createElement(\"option\", {\n        value: \"Remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836\n        },\n        __self: this\n      }, \"Remove\"))), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840\n        },\n        __self: this\n      }, \"Winter Semester\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        id: \"winterSetting\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Keep\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844\n        },\n        __self: this\n      }, \"Keep\"), React.createElement(\"option\", {\n        value: \"Remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845\n        },\n        __self: this\n      }, \"Remove\"))), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849\n        },\n        __self: this\n      }, \"Summer Semester\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        id: \"summerSetting\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Keep\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853\n        },\n        __self: this\n      }, \"Keep\"), React.createElement(\"option\", {\n        value: \"Remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854\n        },\n        __self: this\n      }, \"Remove\"))))), React.createElement(Button, {\n        text: \"Apply Settings\",\n        onClick: function onClick() {\n          return _this2.updateSettings(falltable, wintertable, summertable);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PdfSequenceGenerator;\n}(React.Component);\n\nexport default PdfSequenceGenerator;","map":{"version":3,"sources":["C:\\Users\\MonPC\\Desktop\\School\\SOEN\\SOEN 341 Software Process'\\Project\\cssd\\client\\src\\pdfSequenceGenerator.js"],"names":["React","data","jsPDF","Table","Modal","Container","Row","Col","Button","html2canvas","DragDropContext","Droppable","Draggable","PdfSequenceGenerator","convertToPDF","input","document","getElementById","props","year","dummies","getElementsByClassName","forEach","call","row","style","display","tableCols","tableCol","classList","add","reduce","querySelectorAll","col","width","dpi","scale","then","canvas","imgData","toDataURL","pdf","addImage","output","save","remove","move","source","destination","droppableSource","droppableDestination","sourceClone","Array","from","destClone","splice","index","removed","inOtherSemester","some","course","result","droppableId","reorder","list","startIndex","endIndex","getRowStyle","isDragging","draggableStyle","getTableStyle","isDraggingOver","onDragEnd","console","log","items","state","setState","moved","addClass","falltable","wintertable","summertable","fall","selectedCoursesFall","winter","selectedCoursesWinter","summer","selectedCoursesSummer","value","courses","errorMessage","semester","addedClass","classExists","i","length","innerHTML","boool","str","push","showAdd","totalNumberOfClasses","yeetus","Date","getFullYear","years","map","jimmy","bootlegUpdateSettings","removeClass","removedFallClass","removedWinterClass","removedSummerClass","showRemove","filter","element","updateSettings","semesterArray","fallRemove","winterRemove","summerRemove","numberOfSemesters","division","newID","code","textAlign","semesterDisplay","newArray","default","sequence","modify","numberOfDisplayedSemesters","provided","snapshot","innerRef","draggableProps","dragHandleProps","name","credit","removeOptions","padding","marginLeft","marginRight","color","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport * as data from \"./data/courses.json\";\r\nimport * as jsPDF from \"jspdf\";\r\nimport { Table, Modal, Container, Row, Col } from \"react-bootstrap\";\r\nimport Button from \"./components/Button\";\r\nimport * as html2canvas from \"html2canvas\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nclass PdfSequenceGenerator extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      courses: data.default.sequence,\r\n      selectedCoursesFall: [],\r\n      selectedCoursesWinter: [],\r\n      selectedCoursesSummer: [],\r\n      showAdd: false,\r\n      showRemove: false,\r\n      modify: false,\r\n      year: new Date().getFullYear(),\r\n      numberOfDisplayedSemesters: 3,\r\n      semesterDisplay: null, //holds the code for the Container tag #divtoprint\r\n      semesterArray: null //Holds the Col tags\r\n    };\r\n  }\r\n\r\n  convertToPDF = () => {\r\n    const input = document.getElementById(\"divToPrint\" + this.props.year);\r\n    const dummies = document.getElementsByClassName(\"dummyRow\");\r\n\r\n    //This block below formats the div-to-print properly so it is sized correctly on the pdf\r\n    [].forEach.call(dummies, row => {\r\n      row.style.display = \"none\";\r\n    });\r\n    const tableCols = document.getElementsByClassName(\"tableCol\");\r\n    [].forEach.call(tableCols, tableCol => {\r\n      tableCol.classList.add(\"col-md-12\");\r\n    });\r\n    const reduce = document.querySelectorAll(\"table, #pdfTable\");\r\n    [].forEach.call(reduce, col => {\r\n      col.style.width = \"606px\";\r\n    });\r\n    document.getElementById(\"soen341\").style.width = \"896px\";\r\n    //End of formatting code\r\n\r\n    html2canvas(input, {\r\n      dpi: 9000, //supposed to make it less blurry on retina\r\n      scale: 1.2 //approximately fills the width of pdf page with the sequence table\r\n    })\r\n      .then(canvas => {\r\n        const imgData = canvas.toDataURL(\"image/png\");\r\n        const pdf = new jsPDF();\r\n        pdf.addImage(imgData, \"JPEG\", 0, 0);\r\n        pdf.output(\"/jimmyTest.pdf\");\r\n        pdf.save(\"jimmyTest.pdf\");\r\n      })\r\n      .then(() => {\r\n        //This then() call will put back the div-to-print to its original size\r\n        [].forEach.call(dummies, row => {\r\n          row.style.display = \"contents\";\r\n        });\r\n        [].forEach.call(tableCols, tableCol => {\r\n          tableCol.classList.remove(\"col-md-12\");\r\n        });\r\n        [].forEach.call(reduce, col => {\r\n          col.style.width = \"100%\";\r\n        });\r\n        document.getElementById(\"soen341\").style.width = \"100%\";\r\n      });\r\n  };\r\n\r\n  /*\r\n   * Move a draggable from one droppable to another.\r\n   */\r\n  move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1); // replace 1 element at droppableSource.index with nothing (remove it)\r\n\r\n    var inOtherSemester = destination.some(course => {\r\n      return course.course === removed.course;\r\n    });\r\n\r\n    if (inOtherSemester) {\r\n      return;\r\n    }\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed); // remove no element at droppableDestination.index and add removed (add)\r\n\r\n    let result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n  };\r\n\r\n  reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1); // remove 1 element at startIndex and replace with nothing\r\n    result.splice(endIndex, 0, removed); // remove no element at endIndex and add removed\r\n\r\n    return result;\r\n  };\r\n\r\n  getRowStyle = (isDragging, draggableStyle) => ({\r\n    //background: isDragging? 'rgb(92, 96, 101, 0.8)': '#212529',\r\n    //display: isDragging? 'table':'block',\r\n\r\n    ...draggableStyle\r\n  });\r\n\r\n  getTableStyle = isDraggingOver => ({\r\n    //Change table properties during drag\r\n    //background: isDraggingOver? 'blue': 'red'\r\n  });\r\n\r\n  onDragEnd = result => {\r\n    console.log(result);\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside a droppable element\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      const items = this.reorder(\r\n        this.state[source.droppableId],\r\n        source.index,\r\n        destination.index\r\n      );\r\n\r\n      this.setState({\r\n        [source.droppableId]: items\r\n      });\r\n    } else {\r\n      const moved = this.move(\r\n        this.state[source.droppableId],\r\n        this.state[destination.droppableId],\r\n        source,\r\n        destination\r\n      );\r\n\r\n      if (!moved) {\r\n        return;\r\n      }\r\n\r\n      this.setState(\r\n        {\r\n          [source.droppableId]: moved[source.droppableId],\r\n          [destination.droppableId]: moved[destination.droppableId]\r\n        },\r\n        () => {\r\n          console.log(this.state);\r\n          console.log(moved);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  // FUNCTIONS() HERE *********************************************************\r\n  addClass = (falltable, wintertable, summertable) => {\r\n    let fall = this.state.selectedCoursesFall; //Keep track of user selected classes for Fall\r\n    let winter = this.state.selectedCoursesWinter; //Keep track of user selected classes for Winter\r\n    let summer = this.state.selectedCoursesSummer; //Keep track of user selected classes for Summer\r\n    let input = document.getElementById(\"add-class\").value; //Get user input\r\n    let classList = this.state.courses; //Gets the whole list of courses of concordia\r\n    let errorMessage = document.getElementById(\"addStatus\");\r\n    let semester = document.getElementById(\"semester\").value;\r\n    let addedClass; //object\r\n    let classExists = false;\r\n\r\n    for (let i = 0; i < fall.length; i++) {\r\n      //This loop prevents duplicates for fall table\r\n      if (fall[i].course === input) {\r\n        errorMessage.innerHTML = \"You have already added this class\";\r\n        return;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < winter.length; i++) {\r\n      //This loop prevents duplicates for winter table\r\n      if (winter[i].course === input) {\r\n        errorMessage.innerHTML = \"You have already added this class\";\r\n        return;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < summer.length; i++) {\r\n      //This loop prevents duplicates for summer table\r\n      if (summer[i].course === input) {\r\n        errorMessage.innerHTML = \"You have already added this class\";\r\n        return;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < classList.length; i++) {\r\n      // Finds if input class exists and stores it in addedClass\r\n      if (classList[i].course === input) {\r\n        addedClass = classList[i];\r\n        classExists = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (classExists === false) {\r\n      errorMessage.innerHTML = \"Invalid Class/Class Not Found\";\r\n      return;\r\n    }\r\n\r\n    let boool = false;\r\n\r\n    for (let i = 0; i < addedClass.semester.length; i++) {\r\n      if (semester === addedClass.semester[i]) {\r\n        boool = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (boool === false) {\r\n      let str = \"\";\r\n      for (let i = 0; i < addedClass.semester.length; i++) {\r\n        str += addedClass.semester[i] + \"<br />\";\r\n      }\r\n      errorMessage.innerHTML = \"This class is only offered in: <br />\" + str;\r\n      return;\r\n    }\r\n\r\n    switch (semester) {\r\n      case \"Fall\":\r\n        fall.push(addedClass);\r\n        this.setState({\r\n          selectedCoursesFall: fall,\r\n          showAdd: !this.state.showAdd\r\n        });\r\n        break;\r\n      case \"Summer\":\r\n        summer.push(addedClass);\r\n        this.setState({\r\n          selectedCoursesSummer: summer,\r\n          showAdd: !this.state.showAdd\r\n        });\r\n        break;\r\n      case \"Winter\":\r\n        winter.push(addedClass);\r\n        this.setState({\r\n          selectedCoursesWinter: winter,\r\n          showAdd: !this.state.showAdd\r\n        });\r\n        break;\r\n      default:\r\n    }\r\n\r\n    let totalNumberOfClasses = //Damn I really forgot why we need this\r\n      this.state.selectedCoursesFall.length +\r\n      this.state.selectedCoursesSummer.length +\r\n      this.state.selectedCoursesWinter.length;\r\n\r\n    let yeetus = [];\r\n    for (let i = 0; i < 6; i++) {\r\n      /*Basically choose a year from current year up to 8 years later. Don't touch this*/\r\n      yeetus[i] = new Date().getFullYear() + i;\r\n    }\r\n    const years = yeetus.map(jimmy => <option value={jimmy}>{jimmy}</option>);\r\n\r\n    this.bootlegUpdateSettings(falltable, wintertable, summertable);\r\n  };\r\n\r\n  removeClass = (falltable, wintertable, summertable) => {\r\n    let fall = this.state.selectedCoursesFall; //Keep track of user selected classes for Fall\r\n    let winter = this.state.selectedCoursesWinter; //Keep track of user selected classes for Winter\r\n    let summer = this.state.selectedCoursesSummer; //Keep track of user selected classes for Summer\r\n    let removedFallClass = document.getElementById(\"select-remove-fall\"); //selected value from drop down\r\n    let removedWinterClass = document.getElementById(\"select-remove-winter\"); //selected value from drop down\r\n    let removedSummerClass = document.getElementById(\"select-remove-summer\"); //selected value from drop down\r\n    if (removedFallClass === null) {\r\n      this.setState({\r\n        showRemove: !this.state.showRemove\r\n      });\r\n      return;\r\n    }\r\n    if (\r\n      removedFallClass.value === \"Select A Class...\" &&\r\n      removedWinterClass.value === \"Select A Class...\" &&\r\n      removedSummerClass.value === \"Select A Class...\"\r\n    ) {\r\n      document.getElementById(\"removeStatus\").innerHTML =\r\n        \"You have not selected anything.\";\r\n      return;\r\n    }\r\n    fall = fall.filter(element => element.course !== removedFallClass.value); //Remove json course object from fall array\r\n    winter = winter.filter(\r\n      element => element.course !== removedWinterClass.value\r\n    ); //Remove json course object from winter array\r\n    summer = summer.filter(\r\n      element => element.course !== removedSummerClass.value\r\n    ); //Remove json course object from summer array\r\n    this.setState({\r\n      selectedCoursesFall: fall,\r\n      selectedCoursesWinter: winter,\r\n      selectedCoursesSummer: summer,\r\n      showRemove: !this.state.showRemove\r\n    });\r\n\r\n    this.bootlegUpdateSettings(falltable, wintertable, summertable);\r\n  };\r\n\r\n  updateSettings = (falltable, wintertable, summertable) => {\r\n    let semesterArray = []; //this.state.semesterDisplay will take on this value\r\n    let fallRemove = 0;\r\n    let winterRemove = 0;\r\n    let summerRemove = 0;\r\n    if (document.getElementById(\"fallSetting\")) {\r\n      fallRemove =\r\n        document.getElementById(\"fallSetting\").value === \"Remove\" ? 1 : 0; //if removed, set 1 else 0\r\n      winterRemove =\r\n        document.getElementById(\"winterSetting\").value === \"Remove\" ? 1 : 0;\r\n      summerRemove =\r\n        document.getElementById(\"summerSetting\").value === \"Remove\" ? 1 : 0;\r\n    }\r\n\r\n    const numberOfSemesters = 3 - fallRemove - winterRemove - summerRemove; //Number of semester visible for the year\r\n    const division = numberOfSemesters === 0 ? 12 : 12 / numberOfSemesters; //The number used for the md attribute\r\n    const newID = \"mt-\" + division; //New id of the <Container />\r\n\r\n    let fall = {\r\n      semester: \"Fall\",\r\n      code: (\r\n        <Col className=\"tableCol\" md={division}>\r\n          <p style={{ textAlign: \"center\" }}>Fall</p>\r\n          {falltable}\r\n        </Col>\r\n      )\r\n    };\r\n\r\n    let winter = {\r\n      semester: \"Winter\",\r\n      code: (\r\n        <Col className=\"tableCol\" md={division}>\r\n          <p style={{ textAlign: \"center\" }}>Winter</p>\r\n          {wintertable}\r\n        </Col>\r\n      )\r\n    };\r\n\r\n    let summer = {\r\n      semester: \"Summer\",\r\n      code: (\r\n        <Col className=\"tableCol\" md={division}>\r\n          <p style={{ textAlign: \"center\" }}>Summer</p>\r\n          {summertable}\r\n        </Col>\r\n      )\r\n    };\r\n\r\n    if (fallRemove === 0) semesterArray.push(fall);\r\n    if (winterRemove === 0) semesterArray.push(winter);\r\n    if (summerRemove === 0) semesterArray.push(summer);\r\n\r\n    let result = (\r\n      <Container className={newID} id={\"divToPrint\" + this.props.year}>\r\n        <Row>{semesterArray.map(element => element.code)}</Row>\r\n      </Container>\r\n    );\r\n\r\n    this.setState({\r\n      semesterDisplay: result,\r\n      semesterArray: semesterArray,\r\n      year: document.getElementById(\"settingYear\").value\r\n    });\r\n  };\r\n\r\n  bootlegUpdateSettings = (falltable, wintertable, summertable) => {\r\n    //this just updates the tables\r\n    let semesterArray = this.state.semesterArray\r\n      ? this.state.semesterArray\r\n      : [\r\n          {\r\n            semester: \"Fall\",\r\n            code: (\r\n              <Col className=\"tableCol\" md={4}>\r\n                <p style={{ textAlign: \"center\" }}>Fall</p>\r\n                {falltable}\r\n              </Col>\r\n            )\r\n          },\r\n          {\r\n            semester: \"Winter\",\r\n            code: (\r\n              <Col className=\"tableCol\" md={4}>\r\n                <p style={{ textAlign: \"center\" }}>Winter</p>\r\n                {wintertable}\r\n              </Col>\r\n            )\r\n          },\r\n          {\r\n            semester: \"Summer\",\r\n            code: (\r\n              <Col className=\"tableCol\" md={4}>\r\n                <p style={{ textAlign: \"center\" }}>Summer</p>\r\n                {summertable}\r\n              </Col>\r\n            )\r\n          }\r\n        ]; //contains code for Col tags\r\n    let newArray = []; //New col tags array\r\n\r\n    semesterArray.forEach(element => {\r\n      if (element.semester === \"Fall\") {\r\n        element.code = (\r\n          <Col className=\"tableCol\" md={12 / semesterArray.length}>\r\n            <p style={{ textAlign: \"center\" }}>Fall</p>\r\n            {falltable}\r\n          </Col>\r\n        );\r\n\r\n        newArray.push(element);\r\n      }\r\n\r\n      if (element.semester === \"Winter\") {\r\n        element.code = (\r\n          <Col className=\"tableCol\" md={12 / semesterArray.length}>\r\n            <p style={{ textAlign: \"center\" }}>Winter </p>\r\n            {wintertable}\r\n          </Col>\r\n        );\r\n\r\n        newArray.push(element);\r\n      }\r\n\r\n      if (element.semester === \"Summer\") {\r\n        element.code = (\r\n          <Col className=\"tableCol\" md={12 / semesterArray.length}>\r\n            <p style={{ textAlign: \"center\" }}>Summer</p>\r\n            {summertable}\r\n          </Col>\r\n        );\r\n\r\n        newArray.push(element);\r\n      }\r\n    });\r\n\r\n    let newID = \"mt-\" + 12 / newArray.length;\r\n\r\n    let result = (\r\n      <Container className={newID} id={\"divToPrint\" + this.props.year}>\r\n        <Row>{newArray.map(element => element.code)}</Row>\r\n      </Container>\r\n    );\r\n\r\n    this.setState({\r\n      semesterDisplay: result,\r\n      semesterArray: newArray\r\n    });\r\n  };\r\n\r\n  // RENDER() HERE *********************************************************\r\n\r\n  render() {\r\n    let falltable = (\r\n      <Table id=\"pdfTable\" striped bordered hover variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            <th>Course</th>\r\n            <th>Class Name</th>\r\n            <th>Credit</th>\r\n          </tr>\r\n        </thead>\r\n        <Droppable droppableId=\"selectedCoursesFall\">\r\n          {(provided, snapshot) => (\r\n            <tbody\r\n              provided={provided}\r\n              style={this.getTableStyle(snapshot.isDraggingOver)}\r\n              ref={provided.innerRef}\r\n            >\r\n              {this.state.selectedCoursesFall.map((course, index) => (\r\n                <Draggable\r\n                  key={\"key\" + index}\r\n                  draggableId={\"f\" + index}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <tr\r\n                      style={this.getRowStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                      className={\"dragCourse\"}\r\n                      provided={provided}\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      <td>{course.course}</td>\r\n                      <td>{course.name}</td>\r\n                      <td>{course.credit}</td>\r\n                    </tr>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              <tr className={\"dummyRow\"}>\r\n                <td>---</td>\r\n                <td>---</td>\r\n                <td>---</td>\r\n              </tr>\r\n            </tbody>\r\n          )}\r\n        </Droppable>\r\n      </Table>\r\n    );\r\n\r\n    let wintertable = (\r\n      <Table id=\"pdfTable\" striped bordered hover variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            <th>Course</th>\r\n            <th>Class Name</th>\r\n            <th>Credit</th>\r\n          </tr>\r\n        </thead>\r\n        <Droppable droppableId=\"selectedCoursesWinter\">\r\n          {(provided, snapshot) => (\r\n            <tbody\r\n              provided={provided}\r\n              style={this.getTableStyle(snapshot.isDraggingOver)}\r\n              ref={provided.innerRef}\r\n            >\r\n              {this.state.selectedCoursesWinter.map((course, index) => (\r\n                <Draggable\r\n                  key={\"key\" + index}\r\n                  draggableId={\"w\" + index}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <tr\r\n                      style={this.getRowStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                      className={\"dragCourse\"}\r\n                      provided={provided}\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      <td>{course.course}</td>\r\n                      <td>{course.name}</td>\r\n                      <td>{course.credit}</td>\r\n                    </tr>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              <tr className={\"dummyRow\"}>\r\n                <td>---</td>\r\n                <td>---</td>\r\n                <td>---</td>\r\n              </tr>\r\n            </tbody>\r\n          )}\r\n        </Droppable>\r\n      </Table>\r\n    );\r\n\r\n    let summertable = (\r\n      <Table id=\"pdfTable\" striped bordered hover variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            <th>Course</th>\r\n            <th>Class Name</th>\r\n            <th>Credit</th>\r\n          </tr>\r\n        </thead>\r\n        <Droppable droppableId=\"selectedCoursesSummer\">\r\n          {(provided, snapshot) => (\r\n            <tbody\r\n              provided={provided}\r\n              style={this.getTableStyle(snapshot.isDraggingOver)}\r\n              ref={provided.innerRef}\r\n            >\r\n              {this.state.selectedCoursesSummer.map((course, index) => (\r\n                <Draggable\r\n                  key={\"key\" + index}\r\n                  draggableId={\"s\" + index}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <tr\r\n                      style={this.getRowStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                      className={\"dragCourse\"}\r\n                      provided={provided}\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      <td>{course.course}</td>\r\n                      <td>{course.name}</td>\r\n                      <td>{course.credit}</td>\r\n                    </tr>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              <tr className={\"dummyRow\"}>\r\n                <td>---</td>\r\n                <td>---</td>\r\n                <td>---</td>\r\n              </tr>\r\n            </tbody>\r\n          )}\r\n        </Droppable>\r\n      </Table>\r\n    );\r\n\r\n    let removeOptions = (\r\n      <Table striped border hover>\r\n        <tr>\r\n          <td>Fall</td>\r\n          <td>Winter</td>\r\n          <td>Summer</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td>\r\n            <select id=\"select-remove-fall\">\r\n              <option>Select A Class...</option>\r\n              {this.state.selectedCoursesFall.map(element => (\r\n                <option value={element.course}>{element.course}</option>\r\n              ))}\r\n            </select>\r\n          </td>\r\n\r\n          <td>\r\n            <select id=\"select-remove-winter\">\r\n              <option>Select A Class...</option>\r\n              {this.state.selectedCoursesWinter.map(element => (\r\n                <option value={element.course}>{element.course}</option>\r\n              ))}\r\n            </select>\r\n          </td>\r\n\r\n          <td>\r\n            <select id=\"select-remove-summer\">\r\n              <option>Select A Class...</option>\r\n              {this.state.selectedCoursesSummer.map(element => (\r\n                <option value={element.course}>{element.course}</option>\r\n              ))}\r\n            </select>\r\n          </td>\r\n        </tr>\r\n      </Table>\r\n    );\r\n\r\n    let totalNumberOfClasses =\r\n      this.state.selectedCoursesFall.length +\r\n      this.state.selectedCoursesSummer.length +\r\n      this.state.selectedCoursesWinter.length;\r\n\r\n    let yeetus = [];\r\n    for (let i = 0; i < 6; i++) {\r\n      /*Basically choose a year from current year up to 6 years later. Don't touch this*/\r\n      yeetus[i] = new Date().getFullYear() + i;\r\n    }\r\n    const years = yeetus.map(jimmy => <option value={jimmy}>{jimmy}</option>);\r\n\r\n    let semesterDisplay = (\r\n      <Row>\r\n        <Col className=\"tableCol\" md={4}>\r\n          <p style={{ textAlign: \"center\" }}>Fall</p>\r\n          {falltable}\r\n        </Col>\r\n\r\n        <Col className=\"tableCol\" md={4}>\r\n          <p style={{ textAlign: \"center\" }}>Winter </p>\r\n          {wintertable}\r\n        </Col>\r\n\r\n        <Col className=\"tableCol\" md={4}>\r\n          <p style={{ textAlign: \"center\" }}>Summer</p>\r\n          {summertable}\r\n        </Col>\r\n      </Row>\r\n    );\r\n\r\n    /**************************************** JSX here *******************************************************/\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <div\r\n            style={{ padding: \"4rem 1rem\" }}\r\n            className=\"jumbotron j-greetings\"\r\n            id=\"soen341\"\r\n          >\r\n            <div id={\"divToPrint\" + this.props.year}>\r\n              <h3>Year {this.props.year}</h3>\r\n              <br />\r\n\r\n              {/* Printing this part */}\r\n\r\n              {this.state.semesterDisplay ? (\r\n                <Container className=\"mt-4\">\r\n                  <Row>{this.state.semesterDisplay}</Row>\r\n                </Container>\r\n              ) : (\r\n                <Container className=\"mt-4\">{semesterDisplay}</Container>\r\n              ) /* semesterDisplay is default 3 semester, the state version of this will change dynamically */}\r\n            </div>\r\n            {/* End of print part */}\r\n\r\n            <table style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n              <tr>\r\n                <td>\r\n                  <Button\r\n                    text=\"+\"\r\n                    onClick={() => {\r\n                      this.setState({ showAdd: !this.state.showAdd });\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Button\r\n                    text=\"-\"\r\n                    onClick={() => {\r\n                      this.setState({ showRemove: !this.state.showRemove });\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Button id=\"mb5\" text=\"PDF\" onClick={this.convertToPDF} />\r\n                </td>\r\n              </tr>\r\n            </table>\r\n\r\n            <Button\r\n              text=\"Sequence Settings\"\r\n              onClick={() => this.setState({ modify: !this.state.modify })}\r\n            />\r\n            {/* <Button\r\n              text=\"Add Course\"\r\n              onClick={() => {\r\n                this.setState({ showAdd: !this.state.showAdd });\r\n              }}\r\n            />\r\n            <Button\r\n              text=\"Remove Course\"\r\n              onClick={() => {\r\n                this.setState({ showRemove: !this.state.showRemove });\r\n              }}\r\n            />\r\n            <Button id=\"mb5\" text=\"PDF\" onClick={this.convertToPDF} /> */}\r\n          </div>\r\n        </DragDropContext>\r\n\r\n        <Modal\r\n          show={this.state.showAdd}\r\n          onHide={() => {\r\n            this.setState({ showAdd: !this.state.showAdd });\r\n          }}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add A Course</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ textAlign: \"center\" }}>\r\n            <p>Select A Course You'd Like To Add </p> <br />\r\n            <input id=\"add-class\" type=\"text\" />\r\n            <select id=\"semester\">\r\n              <option value=\"Fall\">Fall</option>\r\n              <option value=\"Winter\">Winter</option>\r\n              <option value=\"Summer\">Summer</option>\r\n            </select>\r\n            <p id=\"addStatus\" style={{ color: \"red\" }} />\r\n            <Button\r\n              type=\"submit\"\r\n              text=\"Add Course\"\r\n              onClick={() => this.addClass(falltable, wintertable, summertable)}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          show={this.state.showRemove}\r\n          onHide={() => {\r\n            this.setState({ showRemove: !this.state.showRemove });\r\n          }}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Remove A Course</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ textAlign: \"center\" }}>\r\n            <p>Select A Course You'd Like To Remove </p> <br />\r\n            {totalNumberOfClasses === 0 ? (\r\n              <p>No Classes Have Been Added Yet</p>\r\n            ) : (\r\n              removeOptions\r\n            )}\r\n            <p id=\"removeStatus\" style={{ color: \"red\" }} />\r\n            <Button\r\n              type=\"submit\"\r\n              text=\"Remove Course\"\r\n              onClick={() =>\r\n                this.removeClass(falltable, wintertable, summertable)\r\n              }\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal\r\n          show={this.state.modify}\r\n          onHide={() => this.setState({ modify: !this.state.modify })}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>Sequence Settings</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body style={{ textAlign: \"center\" }}>\r\n            <Container className=\"mt-3\">\r\n              <Row>\r\n                <Col md={3}>\r\n                  Choose Year\r\n                  <br />\r\n                  <br />\r\n                  <select id=\"settingYear\" style={{ width: \"100%\" }}>\r\n                    <option>{this.state.year}</option>\r\n                    {years}\r\n                  </select>\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                  Fall Semester\r\n                  <br />\r\n                  <select id=\"fallSetting\" style={{ width: \"100%\" }}>\r\n                    <option value=\"Keep\">Keep</option>\r\n                    <option value=\"Remove\">Remove</option>\r\n                  </select>\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                  Winter Semester\r\n                  <br />\r\n                  <select id=\"winterSetting\" style={{ width: \"100%\" }}>\r\n                    <option value=\"Keep\">Keep</option>\r\n                    <option value=\"Remove\">Remove</option>\r\n                  </select>\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                  Summer Semester\r\n                  <br />\r\n                  <select id=\"summerSetting\" style={{ width: \"100%\" }}>\r\n                    <option value=\"Keep\">Keep</option>\r\n                    <option value=\"Remove\">Remove</option>\r\n                  </select>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n\r\n            <Button\r\n              text=\"Apply Settings\"\r\n              onClick={() =>\r\n                this.updateSettings(falltable, wintertable, summertable)\r\n              }\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PdfSequenceGenerator;\r\n"]},"metadata":{},"sourceType":"module"}