{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\src\\\\Upload.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nvar endpoint = 'http://localhost:3001/upload';\n\nvar Upload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Upload, _React$Component);\n\n  function Upload() {\n    var _this;\n\n    _classCallCheck(this, Upload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Upload).call(this));\n\n    _this.handleSelectedFile = function (event) {\n      _this.setState({\n        selectedFile: event.target.files[0],\n        loaded: 0\n      });\n    };\n\n    _this.handleUpload = function () {\n      var data = new FormData();\n      data.append('file', _this.state.selectedFile, _this.state.selectedFile.name);\n      console.log(_this.state.selectedFile);\n      var file = _this.state.selectedFile,\n          read = new FileReader();\n      read.readAsBinaryString(file);\n\n      read.onloadend = function () {\n        var rt = {\n          \"contentFile\": read.result,\n          \"filename\": _this.state.selectedFile.name\n        };\n        axios.post(endpoint, rt, {\n          onUploadProgress: function onUploadProgress(ProgressEvent) {\n            _this.setState({\n              loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n            });\n          }\n        }).then(function (res) {\n          console.log(res.statusText);\n        });\n      };\n    };\n\n    _this.state = {\n      selectedFile: null,\n      loaded: 0\n    };\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        name: \"filename\",\n        className: \"btn btn-dark\",\n        onChange: this.handleSelectedFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-dark\",\n        value: \"upload\",\n        onClick: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Upload\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" \", Math.round(this.state.loaded, 2), \" %\"));\n    }\n  }]);\n\n  return Upload;\n}(React.Component);\n\nexport default Upload;","map":{"version":3,"sources":["C:\\Users\\MonPC\\Desktop\\School\\SOEN\\SOEN 341 Software Process'\\Project\\cssd\\client\\src\\Upload.js"],"names":["React","axios","endpoint","Upload","handleSelectedFile","event","setState","selectedFile","target","files","loaded","handleUpload","data","FormData","append","state","name","console","log","file","read","FileReader","readAsBinaryString","onloadend","rt","result","post","onUploadProgress","ProgressEvent","total","then","res","statusText","Math","round","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,IAAMC,QAAQ,GAAG,8BAAjB;;IACMC,M;;;;;AAEJ,oBAAc;AAAA;;AAAA;;AACZ;;AADY,UAQdC,kBARc,GAQO,UAAAC,KAAK,EAAI;AAC5B,YAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAEF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CADF;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID,KAba;;AAAA,UAedC,YAfc,GAeC,YAAM;AACnB,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB,MAAKC,KAAL,CAAWR,YAA/B,EAA6C,MAAKQ,KAAL,CAAWR,YAAX,CAAwBS,IAArE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKH,KAAL,CAAWR,YAAvB;AACA,UAAIY,IAAI,GAAG,MAAKJ,KAAL,CAAWR,YAAtB;AAAA,UAAmCa,IAAI,GAAG,IAAIC,UAAJ,EAA1C;AAEAD,MAAAA,IAAI,CAACE,kBAAL,CAAwBH,IAAxB;;AAEAC,MAAAA,IAAI,CAACG,SAAL,GAAiB,YAAM;AACrB,YAAIC,EAAE,GAAG;AAAC,yBAAeJ,IAAI,CAACK,MAArB;AAA6B,sBAAY,MAAKV,KAAL,CAAWR,YAAX,CAAwBS;AAAjE,SAAT;AACAf,QAAAA,KAAK,CACFyB,IADH,CACQxB,QADR,EACkBsB,EADlB,EACsB;AAClBG,UAAAA,gBAAgB,EAAE,0BAAAC,aAAa,EAAI;AACjC,kBAAKtB,QAAL,CAAc;AACZI,cAAAA,MAAM,EAAGkB,aAAa,CAAClB,MAAd,GAAuBkB,aAAa,CAACC,KAAtC,GAA+C;AAD3C,aAAd;AAGD;AALiB,SADtB,EAQGC,IARH,CAQQ,UAAAC,GAAG,EAAI;AACXd,UAAAA,OAAO,CAACC,GAAR,CAAYa,GAAG,CAACC,UAAhB;AACD,SAVH;AAWH,OAbC;AAgBD,KAvCa;;AAEZ,UAAKjB,KAAL,GAAa;AACXR,MAAAA,YAAY,EAAE,IADH;AAEXG,MAAAA,MAAM,EAAE;AAFG,KAAb;AAFY;AAMb;;;;6BAmCO;AACN,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,SAAS,EAAC,cAA7C;AAA4D,QAAA,QAAQ,EAAE,KAAKN,kBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,KAAK,EAAC,QAAvC;AAAgD,QAAA,OAAO,EAAE,KAAKO,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOsB,IAAI,CAACC,KAAL,CAAW,KAAKnB,KAAL,CAAWL,MAAtB,EAA8B,CAA9B,CAAP,OAHF,CADJ;AAOD;;;;EAnDkBV,KAAK,CAACmC,S;;AAsD3B,eAAehC,MAAf","sourcesContent":["import React from \"react\"\r\nimport axios from \"axios\"\r\n\r\n\r\nconst endpoint = 'http://localhost:3001/upload'\r\nclass Upload extends React.Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      selectedFile: null,\r\n      loaded: 0,\r\n    }\r\n  }\r\n\r\n  handleSelectedFile = event => {\r\n    this.setState({\r\n      selectedFile: event.target.files[0],\r\n      loaded: 0,\r\n    })\r\n  }\r\n\r\n  handleUpload = () => {\r\n    const data = new FormData();\r\n    data.append('file', this.state.selectedFile, this.state.selectedFile.name);\r\n    console.log(this.state.selectedFile);\r\n    var file = this.state.selectedFile,read = new FileReader();\r\n\r\n    read.readAsBinaryString(file);\r\n\r\n    read.onloadend = () => {\r\n      var rt = {\"contentFile\": read.result, \"filename\": this.state.selectedFile.name};\r\n      axios\r\n        .post(endpoint, rt, {\r\n          onUploadProgress: ProgressEvent => {\r\n            this.setState({\r\n              loaded: (ProgressEvent.loaded / ProgressEvent.total) * 100,\r\n            })\r\n          },\r\n        })\r\n        .then(res => {\r\n          console.log(res.statusText);\r\n        })\r\n  }\r\n\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <div className=\"form-group\">\r\n          <input type=\"file\" name=\"filename\" className=\"btn btn-dark\" onChange={this.handleSelectedFile}/>\r\n          <button className=\"btn btn-dark\" value=\"upload\" onClick={this.handleUpload}>Upload</button>\r\n          <div> {Math.round(this.state.loaded, 2)} %</div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Upload\r\n"]},"metadata":{},"sourceType":"module"}