{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\MonPC\\\\Desktop\\\\School\\\\SOEN\\\\SOEN 341 Software Process'\\\\Project\\\\cssd\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport React, { Component } from 'react';\nimport JsonLecture from \"./JsonLecture\";\nimport JsonClass from \"./JsonClass\";\nimport JsonTut from \"./JsonTut\";\nimport cloneDeep from 'lodash/cloneDeep';\n\nvar AveryAlgorithms =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AveryAlgorithms, _Component);\n\n  function AveryAlgorithms() {\n    var _this;\n\n    _classCallCheck(this, AveryAlgorithms);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AveryAlgorithms).call(this));\n    _this.allPossibilities = _this.allPossibilities.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.treeMaker = _this.treeMaker.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.duplicateArray = _this.duplicateArray.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AveryAlgorithms, [{\n    key: \"duplicateArray\",\n    value: function duplicateArray(oldArray) {\n      var newArray = [];\n\n      for (var i = 0; i < oldArray.length; i++) {\n        newArray.push(oldArray[i]);\n      }\n\n      return newArray;\n    }\n  }, {\n    key: \"allPossibilities\",\n    value: function allPossibilities(aCourse) {\n      var possibilities = [];\n      var lecturesTut = cloneDeep(aCourse.lecture);\n      var labs = aCourse.lab; // Lectures + Tuts + Labs\n\n      if (lecturesTut.length > 0 && labs.length > 0) {\n        for (var i = 0; i < lecturesTut.length; i++) {\n          for (var k = 0; k < labs.length; k++) {\n            if (lecturesTut[i].tutorial != null) {\n              if (lecturesTut[i].tutorial.length > 0) {\n                for (var j = 0; j < lecturesTut[i].tutorial.length; j++) {\n                  var pos = new JsonClass();\n                  pos.lab = labs[k];\n                  pos.lecture = cloneDeep(lecturesTut[i]);\n                  pos.lecture.tutorial = cloneDeep(lecturesTut[i].tutorial);\n                  pos.lecture.tutorial = pos.lecture.tutorial.slice(j, pos.lecture.tutorial.length);\n                  pos.lecture.tutorial = pos.lecture.tutorial.slice(0, 1);\n                  possibilities.push(pos);\n                }\n              } // Lectures + Labs - Tuts\n              else {\n                  var _pos = new JsonClass();\n\n                  _pos.lab = labs[k];\n                  _pos.lecture = cloneDeep(lecturesTut[i]);\n                  possibilities.push(_pos);\n                }\n            }\n          }\n        }\n      } // Lectures + Tuts\n      else if (lecturesTut.length > 0) {\n          for (var _i = 0; _i < lecturesTut.length; _i++) {\n            if (lecturesTut[_i].tutorial != null) {\n              if (lecturesTut[_i].tutorial.length > 0) {\n                for (var _j = 0; _j < lecturesTut[_i].tutorial.length; _j++) {\n                  var _pos2 = new JsonClass();\n\n                  _pos2.lecture = cloneDeep(lecturesTut[_i]);\n                  _pos2.lecture.tutorial = cloneDeep(lecturesTut[_i].tutorial);\n                  _pos2.lecture.tutorial = _pos2.lecture.tutorial.slice(_j, _pos2.lecture.tutorial.length);\n                  _pos2.lecture.tutorial = _pos2.lecture.tutorial.slice(0, 1);\n                  possibilities.push(_pos2);\n                }\n              } // lectures - Tuts\n              else {\n                  var _pos3 = new JsonClass();\n\n                  _pos3.lecture = cloneDeep(lecturesTut[_i]);\n                  possibilities.push(_pos3);\n                }\n            }\n          }\n        }\n\n      return possibilities;\n    }\n  }, {\n    key: \"treeMaker\",\n    value: function treeMaker(courses, parent) {\n      if (courses.length == 0) {\n        return;\n      }\n\n      var c1 = courses[0];\n      var poss = this.allPossibilities(c1);\n\n      for (var i = 0; i < poss.length; i++) {\n        var child = new AveryAlgorithms.Node(poss[i], parent, null);\n        parent.branches.push(child);\n        courses.splice(0, 1);\n      }\n\n      for (var j = 0; j < parent.branches.length; j++) {\n        var new_courses = cloneDeep(courses);\n        this.treeMaker(new_courses, parent.branches[j]);\n      }\n\n      return;\n    }\n  }, {\n    key: \"treeCaller\",\n    value: function treeCaller(courses) {\n      var root = new AveryAlgorithms.Node(null, null, null);\n      this.treeMaker(courses, root);\n      return root;\n    }\n  }]);\n\n  return AveryAlgorithms;\n}(Component);\n\nAveryAlgorithms[\"class\"] = \"AveryAlgorithms\";\n\n(function (AveryAlgorithms) {\n  var Node = function () {\n    function Node(course, parent, branches) {\n      this.parent = parent;\n      this.course = course;\n      if (branches != undefined) this.branches = branches;else this.branches = [];\n    }\n\n    return Node;\n  }();\n\n  AveryAlgorithms.Node = Node;\n  Node[\"class\"] = \"AveryAlgorithms.Node\";\n})(AveryAlgorithms || (AveryAlgorithms = {}));\n\nexport default AveryAlgorithms;","map":{"version":3,"sources":["C:\\Users\\MonPC\\Desktop\\School\\SOEN\\SOEN 341 Software Process'\\Project\\cssd\\client\\src\\AveryAlgorithms.js"],"names":["React","Component","JsonLecture","JsonClass","JsonTut","cloneDeep","AveryAlgorithms","allPossibilities","bind","treeMaker","duplicateArray","oldArray","newArray","i","length","push","aCourse","possibilities","lecturesTut","lecture","labs","lab","k","tutorial","j","pos","slice","courses","parent","c1","poss","child","Node","branches","splice","new_courses","root","course","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport JsonLecture from \"./JsonLecture\";\r\nimport JsonClass from \"./JsonClass\";\r\nimport JsonTut from \"./JsonTut\";\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nclass AveryAlgorithms extends Component {\r\n\r\n\tcourse;\r\n\tlab;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.allPossibilities = this.allPossibilities.bind(this);\r\n\t\tthis.treeMaker = this.treeMaker.bind(this);\r\n\t\tthis.duplicateArray = this.duplicateArray.bind(this);\r\n\t}\r\n\r\n\tduplicateArray(oldArray)\r\n\t{\r\n\t\tlet newArray = [];\r\n\t\tfor (let i = 0; i < oldArray.length; i++)\r\n\t\t{\r\n\t\t\tnewArray.push(oldArray[i]);\r\n\t\t}\r\n\t\treturn newArray;\r\n\t}\r\n\r\n\tallPossibilities(aCourse)\r\n\t{\r\n\t\tlet possibilities = [];\r\n\t\tlet lecturesTut = cloneDeep(aCourse.lecture);\r\n\t\tlet labs = aCourse.lab;\r\n\t\t// Lectures + Tuts + Labs\r\n\t\tif (lecturesTut.length > 0 && labs.length > 0)\r\n\t\t{\r\n\t\t\tfor (let i = 0; i < lecturesTut.length; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (let k = 0; k < labs.length; k++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (lecturesTut[i].tutorial != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (lecturesTut[i].tutorial.length > 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfor (let j = 0; j < lecturesTut[i].tutorial.length; j++)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlet pos = new JsonClass();\r\n\t\t\t\t\t\t\t\tpos.lab = labs[k];\r\n\t\t\t\t\t\t\t\tpos.lecture = cloneDeep(lecturesTut[i]);\r\n\t\t\t\t\t\t\t\tpos.lecture.tutorial = cloneDeep(lecturesTut[i].tutorial);\r\n\t\t\t\t\t\t\t\tpos.lecture.tutorial = pos.lecture.tutorial.slice(j, pos.lecture.tutorial.length);\r\n\t\t\t\t\t\t\t\tpos.lecture.tutorial = pos.lecture.tutorial.slice(0, 1);\r\n\t\t\t\t\t\t\t\tpossibilities.push(pos);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Lectures + Labs - Tuts\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet pos = new JsonClass();\r\n\t\t\t\t\t\t\tpos.lab = labs[k];\r\n\t\t\t\t\t\t\tpos.lecture = cloneDeep(lecturesTut[i]);\r\n\t\t\t\t\t\t\tpossibilities.push(pos);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Lectures + Tuts\r\n\t\telse if (lecturesTut.length > 0)\r\n\t\t{\r\n\t\t\tfor (let i = 0; i < lecturesTut.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (lecturesTut[i].tutorial != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (lecturesTut[i].tutorial.length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfor (let j = 0; j < lecturesTut[i].tutorial.length; j++)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet pos = new JsonClass();\r\n\t\t\t\t\t\t\tpos.lecture = cloneDeep(lecturesTut[i]);\r\n\t\t\t\t\t\t\tpos.lecture.tutorial = cloneDeep(lecturesTut[i].tutorial);\r\n\t\t\t\t\t\t\tpos.lecture.tutorial = pos.lecture.tutorial.slice(j, pos.lecture.tutorial.length);\r\n\t\t\t\t\t\t\tpos.lecture.tutorial = pos.lecture.tutorial.slice(0, 1);\r\n\t\t\t\t\t\t\tpossibilities.push(pos);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// lectures - Tuts\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet pos = new JsonClass();\r\n\t\t\t\t\t\tpos.lecture = cloneDeep(lecturesTut[i]);\r\n\t\t\t\t\t\tpossibilities.push(pos);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn possibilities;\r\n\t}\r\n\r\n\ttreeMaker(courses, parent)\r\n\t{\r\n\t\tif (courses.length == 0)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c1 = courses[0];\r\n\t\tlet poss = this.allPossibilities(c1);\r\n\t\tfor (let i = 0; i < poss.length; i++)\r\n\t\t{\r\n\t\t\tlet child = new AveryAlgorithms.Node(poss[i], parent, null);\r\n\t\t\tparent.branches.push(child);\r\n\t\t\tcourses.splice(0,1);\r\n\t\t}\r\n\t\tfor (let j = 0; j < parent.branches.length; j++)\r\n\t\t{\r\n\t\t\tlet new_courses = cloneDeep(courses);\r\n\t\t\tthis.treeMaker(new_courses,parent.branches[j])\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\ttreeCaller(courses)\r\n\t{\r\n\t\tlet root = new AveryAlgorithms.Node(null, null, null);\r\n\t\tthis.treeMaker(courses, root);\r\n\t\treturn root;\r\n\t}\r\n}\r\n\r\nAveryAlgorithms[\"class\"] = \"AveryAlgorithms\";\r\n(function (AveryAlgorithms) {\r\n\tvar Node = (function () {\r\n\t\tfunction Node(course, parent, branches) {\r\n\t\t\tthis.parent = parent;\r\n\t\t\tthis.course = course;\r\n\t\t\tif (branches != undefined)\r\n\t\t\t\tthis.branches = branches;\r\n\t\t\telse\r\n\t\t\t\tthis.branches = [];\r\n\t\t}\r\n\t\treturn Node;\r\n\t}());\r\n\tAveryAlgorithms.Node = Node;\r\n\tNode[\"class\"] = \"AveryAlgorithms.Node\";\r\n})(AveryAlgorithms || (AveryAlgorithms = {}));\r\n\r\nexport default AveryAlgorithms;\r\n"]},"metadata":{},"sourceType":"module"}